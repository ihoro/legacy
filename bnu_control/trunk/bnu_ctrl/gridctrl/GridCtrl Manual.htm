
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>MFC Grid control 2.26 - The Code Project - Miscellaneous Controls</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<META NAME="MS.LOCALE"          content="en-US" />
<meta NAME="Description"        content="A fully featured MFC grid control for displaying tabular data. The grid is a custom control derived from CWnd" />
<meta name="Search.TopicType"   content="kbArticle" />
<meta name="Author"             content="Chris Maunder" />
<meta name="Search.PublishDate" content="16 Nov 1999 14:00:00 GMT" />
<meta name="Search.RevisedDate" content="14 Dec 2005 21:45:00 GMT" />

<!--<meta name="Search.UserRating"  content="86 %" /> -->
<meta NAME="keywords" Content="Free source code, Miscellaneous Controls, Visual C++, MFC, Windows, Grid Control, MFC">
<meta NAME="Copyright" CONTENT="Article content copyright Chris Maunder, 1999, everthing else Copyright © CodeProject, 1999-2006, All Rights Reserved.">
<link rel="alternate" type="application/rss+xml" title="CodeProject Lounge Postings" href="http://www.codeproject.com/webservices/LoungeRSS.aspx">
<link rel="alternate" type="application/rss+xml" title="CodeProject Latest articles - All topics" href="http://www.codeproject.com/webservices/articlerss.aspx?cat=1">
<link rel="alternate" type="application/rss+xml" title="CodeProject Latest articles - MFC / C++" href="http://www.codeproject.com/webservices/articlerss.aspx?cat=2">
<link rel="alternate" type="application/rss+xml" title="CodeProject Latest articles - C#" href="http://www.codeproject.com/webservices/articlerss.aspx?cat=3">
<link rel="alternate" type="application/rss+xml" title="CodeProject Latest articles - ASP.NET" href="http://www.codeproject.com/webservices/articlerss.aspx?cat=4">
<link rel="alternate" type="application/rss+xml" title="CodeProject Latest articles - .NET" href="http://www.codeproject.com/webservices/articlerss.aspx?cat=5">
<meta http-equiv="Reply-to" CONTENT="mailto:webmaster@codeproject.com">
<link rel="icon" href="/favicon.ico" type="image/ico">
<link rel="SHORTCUT ICON" href="/favicon.ico">

<link rel="stylesheet" type=text/css href="/styles/global.css">
<script language="javascript" src="/script/oncopy.js"></script>
<link rel="stylesheet" type=text/css href="/styles/netscape6.css">

</head>
<body text=black bgColor=white aLink=red link=blue vLink=purple topmargin=3 leftmargin=3 
      oncopy="return copyCode();">


<!-- COPYRIGHT 2006 I/PRO Corporation ALL RIGHTS RESERVED. - Page view auditing -->
<script language="JavaScript">
var LSPT="";
LSPT += "?durl=" + escape(document.URL);
LSPT += "&hostname=" + location.hostname;
LSPT += "&url=" + location.pathname;
LSPT += "&query=" + escape(location.search) + escape(location.hash);
LSPT += "&referrer=" + escape(document.referrer);
LSPT += "&browser=" + escape(navigator.appName);
LSPT += "&version=" + escape(navigator.appVersion);
LSPT += "&os=" + escape(navigator.platform);
LSPT += "&xdomain=codeproject.com";
LSPT += "&custid=codeproject";
</script>
<script  Language="Javascript">
document.write('<img src=http://'+'content.ipro.com/images/pixel.gif'+LSPT+' height="1" width="1" style="position:absolute; top:0px; left:0px">');
</script>
<noscript>
<img src="http://content.ipro.com/images/pixel?version=nonjava" height="1" width="1" style="position:absolute;top:0px;left:0px">
</noscript>
<!-- END I/PRO PAGE TAG -->


<table bgColor=#ff9900 border=0 cellPadding=0 cellSpacing=0 width='100%'>
<tr><td width="100%">
<table bgColor=#ff9900 border=0 cellPadding=0 cellSpacing=1 width="100%"><tr>

<td valign=top><a href="http://www.codeproject.com">
<img border=0 width=225 height=72 src="/images/standard/logo225x72.gif" alt="The Code Project"></a></td>
<td align=right><span id=AdBanner4><table cellspacing=0 cellpadding=0><tr><td><a class=AdLink href='/script/admentor/ads.asp'>View our advertisers</a></td><td align=right><a class=AdLink href='/info/mediakit'>Advertise with us</a></td></tr><td colspan=2><script language=javascript>document.write("<IFRAME src=\"/script/ann/ServeHTML.aspx?C=False&id=1589&cb=3118823\" border=0 frameborder=0 scrolling=no width=468 height=60></IFRAME>");</script></td></tr></table></span></td>

</tr>

<tr><td colspan=2 bgcolor=#FBEDBB>
<table cellpadding=3 width=100% border=0 bgcolor=#FBEDBB>

<tr valign=top>
	<td width=100%>
		<font style="font-size:8pt"><a href='/?cat=1'>All Topics</a>, <a href='/?cat=2'>MFC / C++</a> &gt;&gt; <a href='/miscctrl/'>Miscellaneous Controls</a> &gt;&gt; <a href='/miscctrl/#Grid+Control'>Grid Control</a></font><br>

		<br><b><font size=4 style="font-size:16pt">MFC Grid control 2.26</font></b><br><b>
		By <a href="/script/profile/whos_who.asp?id=1">Chris Maunder</a>
		</b>
		<br><br><font style="font-size:9pt">A fully featured MFC grid control for displaying tabular data. The grid is a custom control derived from CWnd&nbsp;</font>
	</td>
	<td align=right valign=top>
		<table border=0 cellspacing=0 cellpadding=1 width=200>	

		<tr valign=top><td>&nbsp;</td><td class=SmallText>C++ (VC5, VC7, VC6, VC7.1)<br> Windows (NT4, Win95, Win98, Win2K), WinCE (CE 2.0, CE 2.10, CE 2.11)<br> MFC, Win32, VS (VS.NET2002, VS6, VS5, VS.NET2003)<br> Dev</td></tr>
		<tr><td>&nbsp;</td><td nowrap class=SmallText>Posted 17 Nov 1999 0:00</td></tr>

		<tr><td>&nbsp;</td><td class=SmallText>Updated 15 Dec 2005 7:45</td></tr>
	
		<tr valign=top><td><img src="/images/hlp.gif" width=16 height=16></td><td nowrap class=SmallText><a href='/script/Articles/list_articles.asp?userid=1'>Articles by this author</a></td></tr>

		<tr valign=top><td></td><td nowrap class=SmallText><b>1,350,736</b> views</td></tr>

		</table>
	</td>
</tr>


</table>
</td></tr>

<tr><td colspan=2>



<TABLE BORDER=0 CELLPADDING=1 CELLSPACING=0 width=100% id=tblSiteToolbar><TR>
<form method="post" action="/info/search.asp" name="Search">
<TD VALIGN=top ALIGN=left width=100%>
<TABLE BORDER="0" CELLPADDING="1" CELLSPACING="0"><TR VALIGN=center>
<td class=smallText><b><font color=white>Search:</font></b></td>
<TD class=navbar nowrap><input class=smallText name="target" 

size="10"

maxlength="255"></TD><td valign=top><select class=smallText name=st>
<option value="kw">Articles</option>
<option value="au">Authors</option>
</select></td>
<TD><INPUT class=formButton type="submit" value="Go"></TD>
</TR></TABLE></td>
</FORM>


<TD>
<div id='MenuPos' style='position:relative;width:380;height:20;'>

<table width=375 cellpadding=2 cellspacing=0 height=20><tr>
<td><A href='/info/faq.asp' class=NavMenuItem>Help!</a></td>
<td><A href='/info/latest.asp' class=NavMenuItem>Articles</td>
<td><A href='/script/comments/forums.asp' class=NavMenuItem>Message Boards</td>
<td><A href='/store/' class=NavMenuItem>StoreFront</td>
<td><A href='/lounge.asp' class=NavMenuItem>Lounge</td>
</tr></table>
</div>
</td>


</TR></table>


<script type='text/javascript'>function Go(){return}</script>
<script type='text/javascript' src='/script/HVMenu/cpmenu_var.js'></script>
<script type='text/javascript' src='/script/HVMenu/menu10_com.js'></script>

</td></tr>

</table></td></tr></table>

<table cellspacing=0 cellpadding=1 border=0>

<tr valign=top>
	<td rowspan=2 valign=top bgcolor=#FBEDBB>
	<table border=0 cellspacing=0 cellpadding=0>
		

<script language=javascript>
function ErrorHandle() {}
window.onerror = ErrorHandle;

function OnNLSubmit(option)
{
	if (option=="up")
		document.subForm.action = "/script/profile/modify.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp";
	else if (option=="in")
		document.subForm.action = "/script/profile/process_logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp";
	document.subForm.submit();
	return true;
}
</script>


<tr><td>
<table cellspacing=3 cellpadding=0>
<tr valign=top><td></td><td></td></tr><tr valign=top><td><img src=/script/images/support_icon.gif width=16 height=16></td><td class=smallText><A HREF='/store/'><b>Ultimate Combo<br>MFC tools $449</b></A></td></tr><tr valign=top><td></td><td></td></tr>
<tr valign=top>	
      <td><img src="/images/mail.gif" width=16 height=16></td>
      <td class=SmallText><a href='/script/recommend/form.asp?guid=%2Fmiscctrl%2Fgridctrl%2Easp'>Send to a friend</a></td>
</tr>
<tr valign=top><td></td><td></td></tr><tr><td colspan=2 bgcolor=black><img src='/images/space.gif' height=1 width=1></td></tr><tr valign=top><td colspan=2 class=InfoBarHeader><br>Sign in / Sign up</td></tr>
</table></td></tr>

<tr><td class=smallText>
<form name="subForm" id=subForm action="/script/profile/process_logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp" method=post>
<table width=125 border=0 cellpadding=0 cellspacing=0 bgcolor=#ffcc99>
	<tr><td colspan=2><img src='/images/space.gif' height=3></td></tr>

	<tr>
		<td class=smallText>&nbsp;Email</td>
		<td class=smallText><input class=smallText type="text" name="Email" id="Email" style="width: 60px;">
		</td>
	</tr>
	<tr>
		<td class=smallText>&nbsp;Password</td>
		<td><input class=smallText type="password" name="Password" id="Password" style="width: 60px;"></td>
	</tr>
	<tr>
		<td colspan=2 class=smallText valign=middle><input type=checkbox checked name=cookie>Remember me</td>
	</tr>
	<tr><td colspan=2><img src='/images/space.gif' height=3></td></tr>


	<tr>
		<td align=center><a href='/script/profile/modify.asp'><img border=0 src="/images/signup.gif"></a></td>
		<td align=center><input border=0 type="image" src="/images/signin.gif"></td>
	</tr>


	<tr><td colspan=2><img src='/images/space.gif' height=3></td></tr>
</form></table>
</td></tr>

<tr><td class=smallText><a class=smallText href="/script/profile/forgot.asp" name='HLLink'>Lost your Password?</a></td></tr>

		<tr><td>&nbsp;</td></tr>
		<tr><td>
		
<center><script language=javascript>document.write("<IFRAME src=\"/script/ann/ServeHTML.aspx?C=False&id=1590&cb=3118824\" border=0 frameborder=0 scrolling=no width=120 height=600></IFRAME>");</script><br>

</center><br>

		</td></tr>
	</table>
	</td>
	<td width=5 rowspan=2>
		<img src='/images/space.gif' width=5 height=1>	
	</td>



	<td width=100% align=right bgcolor=white>


<table width=100%><tr valign=top><td nowrap valign=top class=smallText><table ><tr><td bgcolor=#ffffff class=smallText><img align=absmiddle src='/images/print.gif'> <a href='/miscctrl/gridctrl.asp?print=true' target=_print>Print</a></td><td bgcolor=#ffffff class=smallText><img align=absmiddle src='/script/images/sitebuild_icon.gif'><a href="/script/submit/ReportProblem.asp?GUID=%2Fmiscctrl%2Fgridctrl%2Easp">Broken Article?</a></td><td bgcolor=#ffffff class=smallText><img align=absmiddle src='/images/link.gif'><a href="/script/profile/add_bookmark.asp?t=0&ct=%2Fmiscctrl%2Fgridctrl%2Easp&guid=%2Fmiscctrl%2Fgridctrl%2Easp">Bookmark</a></td><td bgcolor=#ffffff class=smallText><img align=absmiddle src='/images/mail_small.gif'> <a href='#__comments'>Discuss</a></td></tr></table>
</td>
<td align=right nowrap><a name="__top"></a><table><tr><td align=right class=smallText>761 votes  for this article.</td><td>
<table border="2" cellpadding="0" cellspacing="0"><tr>
<td><img src='/script/images/red.gif' width='20' height='5' border='0'></td>
<td><img src='/script/images/red.gif' width='20' height='5' border='0'></td>
<td><img src='/script/images/red.gif' width='20' height='5' border='0'></td>
<td><img src='/script/images/red.gif' width='20' height='5' border='0'></td>
<td><img src='/script/images/red.gif' width='16' height='5' border='0'><img src='/script/images/white.gif' width='4' height='5' border='0'></td>
</tr></table>
</td></tr><tr><td colspan=2 align=right class=smallText><a href='/script/articles/top_articles.asp?st=2' title='Calculated as rating x Log10(# votes)'>Popularity: 13.9</a>. Rating: <b>4.82</b> out of 5.</td></tr></table></td></tr></table>

	</td>
</tr>
<tr>
	<td width=100% valign=top>

<div id="contentdiv">


<!-- Article Starts -->



<UL class=download>
<LI class=download><A href="gridctrl/gridctrl_demo226.zip">Download demo project (v2.26 beta) - 296 Kb</A> 
<LI class=download><A href="gridctrl/gridctrl226_src.zip">Download source (v2.26 beta) - 101 Kb</A><br>&nbsp;</LI>

<LI class=download><A href="gridctrl/gridctrl_demo225.zip">Download demo project (v2.25) - 278 Kb</A> 
<LI class=download><A href="gridctrl/gridctrl_src.zip">Download source (v2.25) - 99 Kb</A> </LI>
</UL>
<P><IMG height=228 alt="gridctrl example image" src="gridctrl/gridctrl.gif" 
width=341 align=bottom border=0> 
<H2>Preface</H2>
<P>This grid is the work of thousands of hours of squinting at pixels, hunting 
memory leaks, adding new features, fixing new bugs and beating the code by force 
of will into a form that is as feature rich and useable as something of this 
form can be. Dozens of developers from all over the world have contributed 
fixes, improvements and suggestions over the 4 years that the grid has been 
growing, and there is still no end in sight. Most of the fixes have been sent in 
by readers so I'm trusting that they have done sufficient testing.</P>
<P>Release 2.26 is a minor update of 2.25 for Visual C++ 8.0 (Visual Studio 
2005) and includes row and column reordering as well as sorting in virtual mode.For a full list of changes for version 2.26 
click <A href="#New">here</A>. Please note that the changes in 2.26 are 
considered beta quality and have not been tested. Version 2.25 has is still 
available for download above.</P>
<H2>Contents</H2>
<TABLE cellSpacing=0 cellPadding=0 width="90%">
<TBODY>
<TR>
<TD vAlign=top>
<UL>
<LI><A href="#Introduction">Introduction</A> 
<LI><A href="#Structure">Structure</A> 
<LI><A href="#Overrides">Protected overridable functions</A> 
<LI><A href="#Clipboard">Clipboard</A> 
<LI><A href="#Sorting">Sorting</A> 
<LI><A href="#Virtual">Virtual Mode</A> 
<LI><A href="#Acknowledgements">Acknowledgements</A> </LI></UL></TD>
<TD vAlign=top>
<UL>
<LI><A href="#Appearance">General appearance and features</A> 
<LI><A href="#Files">Files</A> 
<LI><A href="#Constuction">Construction</A> 
<LI><A href="#NumRowsCols">Number of rows and columns</A> 
<LI><A href="#Sizing">Sizing and position functions</A> 
<LI><a href="#reorder">Reordering rows and columns</a></LI></UL></TD>
<TD vAlign=top>
<UL>
<LI><A href="#EditValidate">Cell Editing and Validation</A> 
<LI><A href="#Structures">Structures, defines and Messages</A> 
<LI><A href="#Colours">Colours</A> 
<LI><A href="#CellInfo">General cell information</A> 
<LI><A href="#Operations">Operations</A> 
<LI><A href="#Printing">Printing</A> 
<LI><A href="#History">History</A> </LI></UL></TD></TR></TBODY></TABLE>
<H2><A name=Introduction>Introduction</A></H2>
<P>After pushing the <CODE>CListCtrl</CODE> to its limits in trying to display 
and edit tabulated data I decided what was really needed was a dedicated grid 
control. I started writing my own grid control from scratch but decided to save 
time by modifying <A href="mailto:chinajoe@aol.com">Joe Willcoxson's</A> free 
WorldCom grid control at <A 
href="http://users.aol.com/chinajoe/wcmfclib.html">http://users.aol.com/chinajoe/wcmfclib.html</A>. 
I tore apart his code and rebuilt it from the ground up in order to get it to do 
all the things I needed. The code has gone through so many modifications that 
I'm not sure if there is even a single original line of code. In any case Joe's 
code was a great framework on which to build. 
<P>The project started out as a simple clean up but very quickly ballooned into 
a bit of a nightmare as I kept finding new features that I felt just <I>had</I> 
to go into it. It has not been tested exhaustively - but I'm fairly confident 
that it won't fall over too badly :). Joe was kind enough to allow me to release 
the source with no strings attached (since it is based on his code) but since 
the project was such a marathon I am placing a couple of very minor conditions 
on the use of this code: 
<BLOCKQUOTE style="BACKGROUND-COLOR: #fbedbb"><I>
<P>This code may be used in compiled form in any way you desire (including 
commercial use). The code may be redistributed unmodified by any means 
<B>providing</B> it is not sold for profit without the authors written consent, 
and providing that this notice and the authors name and all copyright notices 
remains intact. However, this file and the accompanying source code <B>may 
not</B> be hosted on a website or bulletin board without the authors written 
permission.</P>
<P><B>This software is provided "as is" without express or implied warranty. Use 
it at your own risk!</B></P>
<P>Whilst I have made every effort to remove any undesirable "features", I 
cannot be held responsible if it causes any damage or loss of time or 
data.</P></I></BLOCKQUOTE>Hopefully that isn't too much to ask considering the 
amount of work that went into this. If you <I>do</I> use it in a commercial 
application then <B>please</B> send me an <A 
href="mailto:cmaunder@mail.com">email</A> letting me know. There's no point in 
me releasing and maintaining/upgrading this thing if no one is gonna use it. 
<P>The control features: 
<UL>
<LI>Cell selection using the mouse, with optional Control and Shift key 
combinations. Selection can be disabled. 
<LI>Row and Column resizing. Sizing can be disabled for row, columns or both. 
<LI>Auto row or column sizing when dividers are double-clicked. 
<LI>Any number of fixed rows and columns. 
<LI>Individual cells can have separate text and background colours. 
<LI>Individual cells can have separate fonts. 
<LI>Individual cells can be marked "Read-Only", or have their modification 
status set and checked. 
<LI>OLE Drag and drop. 
<LI>Ctrl-C, Ctrl-X and Ctrl-V perform clipboard copy, cut and paste, and Ctrl-A 
for "Select All" 
<LI>In place editing of cell contents. If a character key is pressed while a 
cell has focus, editing will start on that cell, and the arrow keys will allow 
navigation to other keys. If the current focus cell is clicked on, editing will 
start and the arrow keys will move the carat inside the edit control. Editing 
can be disabled. 
<LI>Support for Microsoft intellimouse. 
<LI>Optional grid lines. 
<LI>Images in any cell 
<LI>"Virtual" mode for large datasets 
<LI>Full printing support, for either a Doc/View environment (inc Print preview) 
or a standalone dialog based app (no print preview). 
<LI>Optional "List mode", including full row selection, single row selection, 
and sort on column header click. 
<LI>Numerous virtual functions to allow this control to be extended very easily. 

<LI>Unicode support. 
<LI>WinCE support 
<LI>Titletips for cells that are too small to display their data. 
<LI>Hidden rows and columns 
<LI>Compiles under VC 4.2, 5.0, 6.0 and under the CE toolkit version 2.0 and 3.0 
</LI></UL>The <A href="gridctrl/gridctrl_demo224.zip">sample project</A> 
demonstrates most of the features of the grid control. 
<H2><A name=Files>Files</A></H2>
<P>To use the Grid control in your project you will need to add a number of 
files to your project: <BR><BR>
<BLOCKQUOTE>
<TABLE cellSpacing=0 width="90%">
<TBODY>
<TR vAlign=top>
<TD><CODE>gridctrl.cpp, gridctrl.h</CODE></TD>
<TD>Main grid control source and header files.</TD></TR>
<TR>
<TD><CODE>gridcellbase.cpp, gridcellbase.h</CODE></TD>
<TD>Main grid cell base class.</TD></TR>
<TR>
<TD><CODE>gridcell.cpp, gridcell.h</CODE></TD>
<TD>Main grid cell default class implementation.</TD></TR>
<TR vAlign=top>
<TD><CODE>CellRange.h</CODE></TD>
<TD>Definition of CCellID and CCellRange helper classes.</TD></TR>
<TR vAlign=top>
<TD><CODE>MemDC.h</CODE></TD>
<TD><A href="keithr@europa.com">Keith Rule</A>'s memory DC helper 
class.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>InPlaceEdit.cpp, InPlaceEdit.h</CODE></TD>
<TD>In-place edit windows source and header files.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>GridDropTarget.cpp, GridDropTarget.h</CODE></TD>
<TD>Grid control OLE drag and drop target. Only necessary if you don't define 
GRIDCONTROL_NO_DRAGDROP in gridctrl.h</TD></TR>
<TR vAlign=top>
<TD width="45%"><CODE>Titletip.cpp, Titletip.h</CODE></TD>
<TD width="50%">Titletips for cells, from Zafir Anjum. Only necessary if you 
don't define GRIDCONTROL_NO_TITLETIPS in 
gridctrl.h</TD></TR></TBODY></TABLE></BLOCKQUOTE><A name=Structure></A>
<H2>Structure</H2>
<P>The grid is based on a framework (the <CODE>CGridCtrl</CODE> object) that 
organises and controls a collection of cells (<CODE>CGridBaseCell</CODE>) that 
contain the data, perform operations such as drawing, and handle methods such as 
button clicks. The grid object itself handles events such as button clicks 
before the cells get a chance, and will pass on certain mouse messages if it 
considers it necessary. The grid also contains a drag and drop target 
(<CODE>CGridDropTarget</CODE>) that is registered to handle drop notifications, 
and there is also a title tip object (<CODE>CTitleTip</CODE>) that displays the 
contents of cells when the physical dimensions of a cell are insufficient to 
display its' contents in their entirety. 
<P>The grid cells can be of any type as long as the class is derived from 
<CODE>CGridBaseCell</CODE>. Included with the package is a 
<CODE>CGridCell</CODE> class that handles basic data storage and editing. 
Extensions such as the <CODE>CGridCellCombo</CODE> and <CODE>CGridURLCell</CODE> 
class demonstrate how to create your own cell classes. 
<P>There are two main types of cell - fixed and non-fixed. Fixed cells are 
typically on the left and top of the grid and do not move when the grid is 
scrolled. Typically these contain column and row headings and are not editable. 
Non fixed cells make up the "interior" of the grid and can be edited and 
selected. 
<P>Default values for various properties of the grid are stored in 
<CODE>CGridDefaultCell</CODE> objects. There are currently 4 of these objects 
per grid - one each to hold default values for the non-fixed cells, fixed 
columns, foxed rows, and cells that are both fixed rows and columns cells. Thus 
in order to set a default property for the grid, use 
<CODE>CGridCtrL::GetDefaultCell</CODE> to get the default cell implementation 
you are after, then set it's values directly. 
<P>Cells hold their property values explicitely, except for the font property. 
Each cell holds a pointer to a font structure, and this pointer is only 
allocated and used if you set that cell's font to a non-default value. 
<P>The grid also has a <B>virtual mode</B> that stops the grid from actually 
creating cells, and allows you to specify either a callback funtion or message 
handler that the grid will call each time it needs information on a cell. This 
saves enourmously on memory at the expense of slightly decreased performance. 
There is a <CODE>GVN_ODCACHEHINT</CODE> message that is sent to the grid's 
parent that will help you cache data in preparation for the grid's cell info 
requests. 
<P>Grid cells are stored row-by-row, so all operations on large numbers of cells 
should be done row-by-row as well. 
<H2><A name=Constuction>Construction</A></H2>
<P>OK - so how do you use it? 
<P>The underlying class of the grid control is <CODE>CGridCtrl</CODE> which is 
derived from <CODE>CWnd</CODE>. To use it, either use the MS Visual C++ dialog 
editor to place a custom control on a dialog, and enter "MFCGridCtrl" (no 
quotes) as the Class name. To subclass the control using the <CODE>DDX</CODE> 
mechanism (this will be done by default by the ClassWizard) use the 
<CODE>DDX_GridControl</CODE> function instead of the <CODE>DDX_Control</CODE> 
function (just manually change the ClassWizard entry). This ensures your control 
is correctly registered as a drop target and avoids some weird win95 issues. 
<P>Alternatively you can use <CODE>CGridCtrl::Create</CODE>: </P><PRE>CGridCtrl grid;
grid.Create(rect, pParentWnd, nID);</PRE>where <I>rect</I> is the dimensions, 
<B>pParentWnd</B> is the parent window, and <I>nID</I> is the id. 
<H2><A name=NumRowsCols>Number of rows and columns</A></H2>
<TABLE cellSpacing=0 cellPadding=5 width="100%">
<TBODY>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetRowCount() <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Returns the number of rows (including fixed 
rows)</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetColumnCount() <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Returns the number of columns (including fixed 
columns)</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetFixedRowCount() <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText vAlign=top width="100%">Returns the number of fixed 
rows</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetFixedColumnCount() <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Returns the number of fixed columns</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetRowCount(<span class='cpp-keyword'>int</span> nRows)</CODE> </TD>
<TD class=smallText width="100%">Sets the number of rows (including fixed rows), 
Returning TRUE on success.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetColumnCount(<span class='cpp-keyword'>int</span> nCols)</CODE> </TD>
<TD class=smallText width="100%">Sets the number of columns (including fixed 
columns), Returning TRUE on success.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetFixedRowCount(<span class='cpp-keyword'>int</span> nFixedRows = <span class='cpp-literal'>1</span>)</CODE> </TD>
<TD class=smallText width="100%">Sets the number of fixed rows, returning TRUE 
on success.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetFixedColumnCount(<span class='cpp-keyword'>int</span> nFixedCols = <span class='cpp-literal'>1</span>)</CODE> </TD>
<TD class=smallText width="100%">Sets the number of columns, returning TRUE on 
success.</TD></TR></TBODY></TABLE>
<H2><A name=Sizing>Sizing and position functions</A></H2>
<TABLE cellSpacing=0 cellPadding=5 width="100%">
<TBODY>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetRowHeight(<span class='cpp-keyword'>int</span> nRow) <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Gets the height of row nRow.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetRowHeight(<span class='cpp-keyword'>int</span> row, <span class='cpp-keyword'>int</span> height)</CODE> </TD>
<TD class=smallText width="100%">Sets the height of row nRow.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetColumnWidth(<span class='cpp-keyword'>int</span> nCol) <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Gets the width of column nCol</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetColumnWidth(<span class='cpp-keyword'>int</span> col, <span class='cpp-keyword'>int</span> width)</CODE> </TD>
<TD class=smallText width="100%">Sets the width of column nCol.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetFixedRowHeight() <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Gets the combined height of the fixed 
rows.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetFixedColumnWidth() <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Gets the combined width of the fixed 
columns.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>long</span> GetVirtualHeight() <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Gets the combined height of all the 
rows.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>long</span> GetVirtualWidth() <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Gets the combined width of all the 
columns.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetCellOrigin(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
LPPOINT p)</CODE> </TD>
<TD class=smallText width="100%">Gets the topleft point for cell (nRow,nCol), 
returning TRUE if successful. (cell must be visible for success).</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetCellOrigin(<span class='cpp-keyword'>const</span> CCellID&amp; 
cell,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
LPPOINT p)</CODE> </TD>
<TD class=smallText width="100%">Gets the topleft point for the given cell, 
returning TRUE if successful. (cell must be visible for success). See also <A 
href="#CCellID">CCellID</A><A>.</A></TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetCellRect(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
LPRECT pRect)</CODE> </TD>
<TD class=smallText width="100%">Gets the bounding rectangle for the given cell, 
returning TRUE if successful. (cell must be visible for success).</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetCellRect(<span class='cpp-keyword'>const</span> CCellID&amp; 
cell,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
LPRECT pRect)</CODE> </TD>
<TD class=smallText width="100%">Gets the bounding rectangle for the given cell, 
returning TRUE if successful. (cell must be visible for success). See also <A 
href="#CCellID">CCellID</A><A>.</A></TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetTextRect(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
LPRECT pRect)t</CODE> </TD>
<TD class=smallText width="100%">Gets the bounding rectangle for the text in the 
given cell, returning TRUE if successful. (cell must be visible for 
success).</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetTextRect(<span class='cpp-keyword'>const</span> CCellID&amp; 
cell,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
LPRECT pRect)</CODE> </TD>
<TD class=smallText width="100%">Gets the bounding rectangle for the text in the 
given cell, returning TRUE if successful. (cell must be visible for success). 
See also <A href="#CCellID">CCellID</A><A>.</A></TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetTextExtent(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
LPCTSTR str)</CODE> </TD>
<TD class=smallText width="100%">Gets the bounding rectangle for the given text 
for the given cell, returning TRUE if successful.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetCellTextExtent(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol)</CODE> </TD>
<TD class=smallText width="100%">Gets the bounding rectangle for the text in the 
given cell, returning TRUE if successful.</TD></TR></TBODY></TABLE>
<H2><a name="reorder">Reordering Rows and Columns</a></H2>
<TABLE cellSpacing=0 cellPadding=5 width="100%">
	<tr>
		<td nowrap valign="top"><code><span class='cpp-keyword'>void</span> Reorder(<span class='cpp-keyword'>int</span> From, <span class='cpp-keyword'>int</span> To);</code></td>
		<td>Reorders a row 'From' to row 'To'</td>
	</tr>
	<tr>
		<td nowrap valign="top"><code><span class='cpp-keyword'>void</span> AllowReorderColumn(<span class='cpp-keyword'>bool</span> b=<span class='cpp-keyword'>true</span>) </code></td>
		<td>Whether or not columns can be reordered</td>
	</tr>
	<tr>
		<td nowrap valign="top"><code><span class='cpp-keyword'>void</span> EnableDragRowMode(<span class='cpp-keyword'>bool</span> b=<span class='cpp-keyword'>true</span>) </code></td>
		<td>Whether or not rows can be reordered via drag and drop</td>
	</tr>
	<tr>
		<td nowrap valign="top"><code><span class='cpp-keyword'>int</span> GetLayer(<span class='cpp-keyword'>int</span>** pLayer)</code> </td>
		<td>Returns a pointer to an array of ints representing the 
		current ordering of the grid. Do not forget to delete *pLayer when you 
		are finished</td>
	</tr>
	<tr>
		<td nowrap valign="top"><code><span class='cpp-keyword'>void</span> SetLayer(<span class='cpp-keyword'>int</span>* pLayer)</code></td>
		<td>Sets the ordering of the grid based on a previous saved state.</td>
	</tr>
</table>
<p>
<H2><A name=Virtual>Virtual Mode</H2></A>
<P>Virtual mode allows you to use the grid to display large amounts of data 
without requiring the grid to actually store this data. In Virtual Mode, no 
cells are created and no data is stored other than the widths and heights of 
columns and rows. 
<P>Since the data is not stored by the grid, the grid must have some way of 
asking the application to supply it with data. This is done either by either 
registering a callback function with the grid, or by having the parent handle a 
<CODE>GVN_GETDISPINFO</CODE> notification.</P>
<TABLE cellSpacing=0 cellPadding=5 width="100%">
<TBODY>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetVirtualMode(BOOL bVirtual)</CODE></TD>
<TD class=smallText width="100%">Places the grid in or out of virtual 
mode.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetVirtualMode()</CODE></TD>
<TD class=smallText width="100%">Returns TRUE if the grid is in virtual 
mode.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetCallbackFunc(GRIDCALLBACK 
pCallback,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
LPARAM lParam) </CODE></TD>
<TD class=smallText width="100%">Sets the callback function for when the grid is 
in virtual mode.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>GRIDCALLBACK GetCallbackFunc() </CODE></TD>
<TD class=smallText width="100%">Returns the callback function when the grid is 
in virtual mode.</TD></TR></TBODY></TABLE>
<P>If no callback function is specified then the grid will send a 
<CODE>GVN_GETDISPINFO</CODE> message to it's parent. A <CODE>GV_DISPINFO</CODE> 
structure part of this notification, and looks like:</P><PRE><span class='cpp-keyword'>typedef</span> <span class='cpp-keyword'>struct</span> tagGV_DISPINFO {
    NMHDR   hdr;
    GV_ITEM item;
} GV_DISPINFO;</PRE>
<P>Obviously it's nice to have a hint as to what sort of data the grid will be 
asking for in order to allow caching, so the grid sends out a 
<CODE>GVN_ODCACHEHINT</CODE> message before displaying a page of cells. A 
<CODE>GV_CACHEHINT</CODE> structure is sent as part of this message and looks 
like:</P><PRE><span class='cpp-keyword'>typedef</span> <span class='cpp-keyword'>struct</span> tagGV_CACHEHINT {
    NMHDR      hdr;
    CCellRange range;
} GV_CACHEHINT;</PRE>
<P>An example of handling these messages is as follows: </P><PRE><span class='cpp-comment'>// m_Grid is a member variable of a dialog class that is handling</span>
<span class='cpp-comment'>// this message</span>
BOOL CGridCtrlDemoDlg::OnNotify(WPARAM wParam, LPARAM lParam, 
                                LRESULT* pResult) 
{
    <span class='cpp-keyword'>if</span> (wParam == (WPARAM)m_Grid.GetDlgCtrlID())
    {
        *pResult = <span class='cpp-literal'>1</span>;
        GV_DISPINFO *pDispInfo = (GV_DISPINFO*)lParam;
        <span class='cpp-keyword'>if</span> (GVN_GETDISPINFO == pDispInfo-&gt;hdr.code)
        {
            <span class='cpp-comment'>//TRACE2("Getting Display info for cell %d,%d\n", </span>
                     pDispInfo-&gt;item.row, pDispInfo-&gt;item.col);
            pDispInfo-&gt;item.strText.Format(_T(<span class='cpp-string'>"Message %d,%d"</span>),
                     pDispInfo-&gt;item.row, pDispInfo-&gt;item.col);
            <span class='cpp-keyword'>return</span> TRUE;
        }
        <span class='cpp-keyword'>else</span> <span class='cpp-keyword'>if</span> (GVN_ODCACHEHINT == pDispInfo-&gt;hdr.code)
        {
            GV_CACHEHINT *pCacheHint = (GV_CACHEHINT*)pDispInfo;
            TRACE(_T(<span class='cpp-string'>"Cache hint received for cell range %d,%d - %d,%d\n"</span>),
                  pCacheHint-&gt;range.GetMinRow(), 
                  pCacheHint-&gt;range.GetMinCol(),
                  pCacheHint-&gt;range.GetMaxRow(), 
                  pCacheHint-&gt;range.GetMaxCol());
        }
    }
    
	<span class='cpp-keyword'>return</span> CDialog::OnNotify(wParam, lParam, pResult);
}</PRE>
<P>You can use <CODE>SetCallbackFunc</CODE> to set a callback function that the 
grid will call directly instead of sending a <CODE>GVN_GETDISPINFO</CODE> 
message. A <CODE>GVN_ODCACHEHINT</CODE> message will still be send if a callback 
is used. 
<P>The callback function should be of the form: </P><PRE>BOOL CALLBACK CallbackFunction(GV_DISPINFO * pDispInfo, LPARAM lParam);</PRE>
<P>For example: </P><PRE>BOOL CALLBACK CGridCtrlDemoDlg::GridCallback(GV_DISPINFO *pDispInfo, 
                                             LPARAM <span class='cpp-comment'>/*lParam*/</span>) 
{
    pDispInfo-&gt;item.strText.Format(_T(<span class='cpp-string'>"Callback %d,%d"</span>),
                          pDispInfo-&gt;item.row, pDispInfo-&gt;item.col);
    <span class='cpp-keyword'>return</span> TRUE;
}</PRE>
<P>When calling <CODE>SetCallbackFunc</CODE> you can specify an 
<CODE>LPARAM</CODE> value that will be passed to the callback function each time 
it is called. Note that the callback function must be a static or global 
function. 
<H2><A name=Appearance>General appearance and features</A></H2>
<TABLE cellSpacing=0 cellPadding=5 width="100%">
<TBODY>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetImageList(CImageList* pList)</CODE> </TD>
<TD class=smallText width="100%">Sets the current image list for the grid. The 
control only takes a copy of the pointer to the image list, not a copy of the 
list itself.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>CImageList* GetImageList()</CODE> </TD>
<TD class=smallText width="100%">Gets the current image list for the 
grid.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetGridLines(<span class='cpp-keyword'>int</span> nWhichLines = GVL_BOTH)</CODE> </TD>
<TD class=smallText width="100%">Sets which (if any) gridlines are displayed. 
See <A href="#GVL_Values">here</A> for possible values.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetGridLines() </CODE></TD>
<TD class=smallText width="100%">Gets which (if any) gridlines are displayed. 
See <A href="#GVL_Values">here</A> for possible return values.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetEditable(BOOL bEditable = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Sets if the grid is editable.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL IsEditable()</CODE> </TD>
<TD class=smallText width="100%">Gets whether or not the grid is 
editable.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetListMode(BOOL bEnableListMode = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Sets the grid into (or out of) List mode. When 
the grid is in list mode, full row selection is enabled and clicking on the 
column header will sort the grid by rows.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetListMode()</CODE> </TD>
<TD class=smallText width="100%">Get whether or not the grid is in list 
mode.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetSingleRowSelection(BOOL bSing = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Sets the grid into (or out of) Single row 
selection mode. This mode is only effective when in ListMode. When in this mode, 
only a single row at a time can be selected, so the grid behaves somewhat like a 
multicolumn listbox.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetSingleRowSelection()</CODE> </TD>
<TD class=smallText width="100%">Get whether or not the grid is in single row 
selection mode.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetSingleColSelection(BOOL bSing = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Sets the grid into (or out of) Single column 
selection mode. When in this mode, only a single column at a time can be 
selected.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetSingleColSelection()</CODE> </TD>
<TD class=smallText width="100%">Get whether or not the grid is in single column 
selection mode.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> EnableSelection(BOOL bEnable = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Sets whether or not the grid cells can be 
selected.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL IsSelectable()</CODE> </TD>
<TD class=smallText width="100%">Get whether or not grid cells are 
selectable.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetFixedRowSelection(BOOL bSelect)</CODE> </TD>
<TD class=smallText width="100%">Set whether or not clicking on a fixed row 
selects the cells next to it.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetFixedRowSelection()</CODE> </TD>
<TD class=smallText width="100%">Get whether or not clicking on a fixed row 
selects the cells next to it.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetFixedColumnSelection(BOOL bSelect)</CODE> </TD>
<TD class=smallText width="100%">Set whether or not clicking on a fixed column 
selects the cells underneath.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetFixedColumnSelection()</CODE> </TD>
<TD class=smallText width="100%">Get whether or not clicking on a fixed column 
selects the cells underneath.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> EnableDragAndDrop(BOOL bAllow = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Sets whether drag and drop is 
enabled.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetDragAndDrop()</CODE> </TD>
<TD class=smallText width="100%">Get whether drag and drop is allowed.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetRowResize(BOOL bResize = TRUE) </CODE></TD>
<TD class=smallText width="100%">Sets whether or not rows can be 
resized.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetRowResize()</CODE> </TD>
<TD class=smallText width="100%">Gets whether or not rows can be 
resized.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetColumnResize(BOOL bResize = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Sets whether or not columns can be 
resized.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetColumnResize()</CODE> </TD>
<TD class=smallText width="100%">Gets whether or not columns can be 
resized.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetHandleTabKey(BOOL bHandleTab = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Sets whether or not the TAB key is used to move 
the cell selection.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetHandleTabKey()</CODE> </TD>
<TD class=smallText width="100%">Gets whether or not the TAB key is used to move 
the cell selection.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetDoubleBuffering(BOOL bBuffer = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Sets whether or not double buffering is used 
when painting (avoids flicker).</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetDoubleBuffering()</CODE> </TD>
<TD class=smallText width="100%">Gets whether or not double buffering is used 
when painting.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> EnableTitleTips(BOOL bEnable = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Sets whether or not titletips are 
used.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetTitleTips()</CODE></TD>
<TD class=smallText width="100%">Gets whether or not titletips are 
used.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetTrackFocusCell(BOOL bTrack)</CODE></TD>
<TD class=smallText width="100%">Sets whether or not the fixed cells on the same 
row/column as the current focus cell are highlighted with a sunken 
border</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetTrackFocusCell()</CODE></TD>
<TD class=smallText width="100%">Gets whether or not the fixed cells on the same 
row/column as the current focus cell are highlighted with a sunken 
border</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetFrameFocusCell(BOOL bFrame)</CODE></TD>
<TD class=smallText width="100%">Sets whether or not the cell with the focus is 
highlighted with a framed border</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetFrameFocusCell()</CODE></TD>
<TD class=smallText width="100%">Gets whether or not the focus cell is 
highlighted with a framed border</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetAutoSizeStyle(<span class='cpp-keyword'>int</span> nStyle = GVS_BOTH)</CODE></TD>
<TD class=smallText width="100%">Sets how the auto-sizing should be performed. 
GVS_BOTH = use fixed and non fixed cells; GVS_HEADER = use only the fixed cells; 
GVS_DATA = use only non-fixed cells. </TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetAutoSizeStyle()</CODE></TD>
<TD class=smallText width="100%">Gets how the auto-sizing should be 
performed</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> EnableHiddenColUnhide(BOOL bEnable = TRUE)</CODE></TD>
<TD class=smallText width="100%">Sets whether or not hidden (0-width) columns 
can be unhidden by the user resizing the column.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetHiddenColUnhide()</CODE></TD>
<TD class=smallText width="100%">Gets whether or not hidden (0-width) columns 
can be unhidden by the user resizing the column.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> EnableHiddenRowUnhide(BOOL bEnable = TRUE)</CODE></TD>
<TD class=smallText width="100%">Sets whether or not hidden (0-height) rows can 
be unhidden by the user resizing the row.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetHiddenRowUnhide()</CODE></TD>
<TD class=smallText width="100%">Gets whether or not hidden (0-height) rows can 
be unhidden by the user resizing the row.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> EnableColumnHide(BOOL bEnable = TRUE)</CODE></TD>
<TD class=smallText width="100%">Sets whether or columns can be contracted to 0 
width via mouse.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetColumnHide()</CODE></TD>
<TD class=smallText width="100%">Gets whether or not columns can be contracted 
to 0 width via mouse.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> EnableRowHide(BOOL bEnable = TRUE)</CODE></TD>
<TD class=smallText width="100%">Sets whether or not rows can be contracted to 0 
height via mouse.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetRowHide()</CODE></TD>
<TD class=smallText width="100%">ets whether or not rows can be contracted to 0 
height via mouse.</TD></TR></TBODY></TABLE>
<H2><A name=Colours>Colours</A></H2>
<TABLE cellSpacing=0 cellPadding=5 width="100%">
<TBODY>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetGridBkColor(COLORREF clr)</CODE> </TD>
<TD class=smallText width="100%">Sets the background colour of the control (the 
area outside fixed and non-fixed cells).</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>COLORREF GetGridBkColor() </CODE></TD>
<TD class=smallText width="100%">Gets the background colour of the 
control.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetGridLineColor(COLORREF clr)</CODE></TD>
<TD class=smallText width="100%">Sets the colour of the gridlines.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>COLORREF GetGridLineColor() </CODE></TD>
<TD class=smallText width="100%">Gets the colour of the grid lines.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>COLORREF GetTitleTipBackClr() </CODE></TD>
<TD class=smallText width="100%">Gets the background colour of the 
titletips.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetTitleTipBackClr(COLORREF clr = CLR_DEFAULT)</CODE></TD>
<TD class=smallText width="100%">Sets the background colour of the 
titletips.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>COLORREF GetTitleTipTextClr() </CODE></TD>
<TD class=smallText width="100%">Gets the text colour of the 
titletips.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetTitleTipTextClr(COLORREF clr = CLR_DEFAULT)</CODE></TD>
<TD class=smallText width="100%">Sets the text colour of the 
titletips.</TD></TR></TBODY></TABLE>
<P><B>The following functions are no longer supported.</B> You should use 
<CODE>GetDefaultCell</CODE> to get the default cell implementation for the cell 
type you are intererested in, then set that cell's properties directly. If a 
given cell has default values set, then it will use the values in the default 
cell implementation that matches that cell type.</P>
<TABLE cellSpacing=0 cellPadding=5 width="100%">
<TBODY>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetTextColor(COLORREF clr)</CODE> </TD>
<TD class=smallText width="100%">Sets the colour of the text in non-fixed 
cells.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>COLORREF GetTextColor()</CODE> </TD>
<TD class=smallText width="100%">Gets the colour of the text in non-fixed 
cells.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetTextBkColor(COLORREF clr)</CODE> </TD>
<TD class=smallText width="100%">Sets the background colour of the non-fixed 
cells.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>COLORREF GetTextBkColor() </CODE></TD>
<TD class=smallText width="100%">Gets the background colour of the non-fixed 
cells.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetFixedTextColor(COLORREF clr)</CODE> </TD>
<TD class=smallText width="100%">Sets the colour of the text in fixed 
cells.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>COLORREF GetFixedTextColor()</CODE> </TD>
<TD class=smallText width="100%">Gets the colour of the text in fixed 
cells.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetFixedBkColor(COLORREF clr)</CODE> </TD>
<TD class=smallText width="100%">Sets the background colour of the fixed 
cells.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>COLORREF GetFixedBkColor() </CODE></TD>
<TD class=smallText width="100%">Gets the background colour of the fixed 
cells.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetBkColor(COLORREF clr)</CODE> </TD>
<TD class=smallText width="100%">Sets the background colour of the control (the 
area outside fixed and non-fixed cells).</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>COLORREF GetBkColor() </CODE></TD>
<TD class=smallText width="100%">Gets the background colour of the 
control.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetGridColor(COLORREF clr)</CODE></TD>
<TD class=smallText width="100%">Sets the colour of the gridlines.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>COLORREF GetGridColor() </CODE></TD>
<TD class=smallText width="100%">Gets the colour of the grid 
lines.</TD></TR></TBODY></TABLE>
<P>See also the <A href="#CellColours">Individual Cell colour functions</A> that 
allow an individual cell's colours to be changes seperate to the rest of the 
grid. 
<H2><A name=CellInfo>General cell information</A></H2>
<TABLE cellSpacing=0 cellPadding=5 width="100%">
<TBODY>
<TR vAlign=top>
<TD noWrap><CODE>CGridCellBase* GetDefaultCell(BOOL 
bFixedRow,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BOOL bFixedCol) <span class='cpp-keyword'>const</span></CODE></TD>
<TD class=smallText width="100%">Gets a pointer to the default cell 
implementation for the desired cell type. <I>bFixedRow</I> and <I>bFixedCol</I> 
specify whether the cell is fixed (in row, column or both) or unfixed. Use this 
to set default properties for the grid. Actual cells in the grid have their 
values set as default values when they are first created. They will use 
<CODE>GetDefaultCell</CODE> to query the grids default cell properties and use 
these values for drawing themselves.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>CGridCellBase* GetCell(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol) <span class='cpp-keyword'>const</span></CODE></TD>
<TD class=smallText width="100%">Gets the actual cell for the given row/column 
(or NULL on failure)</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetCellType(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
CRuntimeClass* pRuntimeClass);</CODE></TD>
<TD class=smallText width="100%">Sets the cell class type.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetDefaultCellType(CRuntimeClass* 
pRuntimeClass);</CODE></TD>
<TD class=smallText width="100%">Sets the default cell class type for new 
cells.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetModified(BOOL bModified = 
TRUE,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<span class='cpp-keyword'>int</span> nRow = -<span class='cpp-literal'>1</span>, <span class='cpp-keyword'>int</span> nCol = -<span class='cpp-literal'>1</span>)</CODE> </TD>
<TD class=smallText width="100%">Sets the modified flag for a cell. If no row or 
columns is specified, then change affects the entire grid.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetModified(<span class='cpp-keyword'>int</span> nRow = -<span class='cpp-literal'>1</span>, <span class='cpp-keyword'>int</span> nCol = -<span class='cpp-literal'>1</span>)</CODE> </TD>
<TD class=smallText width="100%">Sets the modified flag for a cell, or if no 
cell, it returns the status for the entire grid.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL IsCellFixed(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol)</CODE> </TD>
<TD class=smallText width="100%">Returns TRUE if the cell is a fixed 
cell.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL IsItemEditing(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol)</CODE> </TD>
<TD class=smallText width="100%">Returns TRUE if the cell is currently being 
edited.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetItem(<span class='cpp-keyword'>const</span> GV_ITEM* pItem)</CODE></TD>
<TD class=smallText width="100%">Sets the contents of a cell with the values 
from the <A href="#GV_ITEM">GV_ITEM</A> structure. Note that the value of the 
mask field will determine which values are actually changed (cf. 
CListCtrl::SetItem).</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetItem(GV_ITEM* pItem)</CODE></TD>
<TD class=smallText width="100%">Fills the <A href="#GV_ITEM">GV_ITEM</A> 
structure with values from the specified cell. Note that the value of the mask 
field will determine which values are actually retrieved (cf. 
CListCtrl::GetItem). </TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetItemText(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol, LPCTSTR str)</CODE></TD>
<TD class=smallText width="100%">Sets the text for the given cell. Returns TRUE 
on success</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>virtual</span> CString GetItemText(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol)</CODE> </TD>
<TD class=smallText width="100%">Gets the text for the given cell. This function 
is virtual in order to aid extensibility. No more messing around with 
LVN_GETDISPINFO messages or string pooling!</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetItemData(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
LPARAM lParam)</CODE> </TD>
<TD class=smallText width="100%">Sets the lParam (user-defined data) field for 
the given cell. Returns TRUE on success. See also <A 
href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>LPARAM GetItemData(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol) <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Gets the lParam (user-defined data) field for 
the given cell. See also <A href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetItemImage(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<span class='cpp-keyword'>int</span> iImage)</CODE> </TD>
<TD class=smallText width="100%">Sets the image index for the given cell. 
Returns TRUE on success. See also <A href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetItemImage(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol) <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Gets the image index for the given 
cell.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetItemState(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
UINT state)</CODE> </TD>
<TD class=smallText width="100%">Sets the state of the given cell. Returns TRUE 
on success. See also <A href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>UINT GetItemState(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol) <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Gets the state of the given cell. See also <A 
href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetItemFormat(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
UINT nFormat)</CODE> </TD>
<TD class=smallText width="100%">Sets the format of the given cell. Returns TRUE 
on success. Default implementation of cell drawing uses CDC::DrawText, so any of 
the DT_* formats are available. See also <A 
href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>UINT GetItemFormat(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol) <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Gets the format of the given cell (default 
returns a CDC::DrawText DT_* format). See also <A 
href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetSelectedCount()</CODE> </TD>
<TD class=smallText width="100%">Gets the number of selected cells.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>CCellID GetFocusCell()</CODE></TD>
<TD class=smallText width="100%">Gets the cell with the focus. See also <A 
href="#CCellID">CCellID</A><A>.</A></TD></TR>
<TR>
<TD noWrap><CODE>CCellID SetFocusCell(CCellID cell);<BR>CCellID SetFocusCell(<span class='cpp-keyword'>int</span> 
nRow, <span class='cpp-keyword'>int</span> nCol);</CODE> </TD>
<TD class=smallText width="100%">Sets the cell with the focus</TD></TR><A 
name=CellColours></A>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetItemBkColour(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
COLORREF cr = CLR_DEFAULT)</CODE></TD>
<TD class=smallText width="100%">Sets the background colour of the given cell. 
Returns TRUE on success. See also <A href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>COLORREF GetItemBkColour(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol) <span class='cpp-keyword'>const</span></CODE></TD>
<TD class=smallText width="100%">Gets the background colour of the given cell. 
See also <A href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetItemFgColour(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
COLORREF cr = CLR_DEFAULT)</CODE></TD>
<TD class=smallText width="100%">Sets the foreground colour of the given cell. 
Returns TRUE on success. See also <A href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>COLORREF GetItemFgColour(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol) <span class='cpp-keyword'>const</span></CODE></TD>
<TD class=smallText width="100%">Gets the foreground colour of the given cell. 
See also <A href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL SetItemFont(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
LOGFONT* lf)</CODE></TD>
<TD class=smallText width="100%">Sets the font of the given cell. Returns TRUE 
on success. See also <A href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR>
<TD noWrap><CODE>LOGFONT* GetItemFont(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol) <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Gets the font of the given cell. See also <A 
href="#GV_ITEM">GV_ITEM</A>.</TD></TR>
<TR>
<TD noWrap><CODE>BOOL IsItemEditing(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol)</CODE></TD>
<TD class=smallText width="100%">Returns TRUE if the cell is currently being 
edited.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> EnsureVisible(CCellID &amp;cell)</CODE></TD>
<TD class=smallText width="100%">Ensures that the specified cell is 
visible.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL IsCellVisible(CCellID &amp;cell) <span class='cpp-keyword'>const</span><BR>BOOL 
IsCellVisible(CCellID cell) <span class='cpp-keyword'>const</span></CODE></TD>
<TD class=smallText width="100%">Returns TRUE if the cell is visible.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL IsCellEditable(CCellID &amp;cell) <span class='cpp-keyword'>const</span><BR>BOOL 
IsCellEditable(CCellID cell) <span class='cpp-keyword'>const</span></CODE></TD>
<TD class=smallText width="100%">Returns TRUE if the cell is editable.</TD></TR>
<TR>
<TD noWrap><CODE>BOOL IsCellSelected(CCellID &amp;cell) <span class='cpp-keyword'>const</span><BR>BOOL 
IsCellSelected(CCellID cell) <span class='cpp-keyword'>const</span></CODE></TD>
<TD class=smallText width="100%">Returns TRUE if the cell is selected</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> EnsureVisible(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol)</CODE></TD>
<TD class=smallText width="100%">Ensures that the specified cell is 
visible.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL IsCellFixed(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol)</CODE> </TD>
<TD class=smallText width="100%">Returns TRUE if the given cell is a fixed 
cell</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetDefCellHeight() <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Returns the default cell height (for new 
cells)</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetDefCellHeight(<span class='cpp-keyword'>int</span> nHeight)</CODE> </TD>
<TD class=smallText width="100%">Sets the default cell height (for new cells). 
This will be overridden if <CODE>SetFont</CODE> is called</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetDefCellWidth() <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Returns the default cell width (for new 
cells)</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetDefCellWidth(<span class='cpp-keyword'>int</span> nWidth)</CODE> </TD>
<TD class=smallText width="100%">Sets the default cell width (for new cells). 
This will be overridden if <CODE>SetFont</CODE> is called</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> GetDefCellWidth() <span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Returns the default cell internal 
margin</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetDefCellMargin(<span class='cpp-keyword'>int</span> nMargin)</CODE> </TD>
<TD class=smallText width="100%">Sets the default cell internal 
margin.</TD></TR></TBODY></TABLE>
<H2><A name=Operations>Operations</A></H2>
<TABLE cellSpacing=0 cellPadding=5 width="100%">
<TBODY>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> InsertColumn(LPCTSTR strHeading, 
&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
UINT nFormat, <span class='cpp-keyword'>int</span> nColumn = -<span class='cpp-literal'>1</span>)</CODE></TD>
<TD class=smallText width="100%">Inserts a column at the position given by nCol, 
or at the end of all columns if nCol is &lt; 0. <B>strHeading</B> is the column 
heading and <B>nFormat</B> the format. Returns the position of the inserted 
column.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>int</span> InsertRow(LPCTSTR 
strHeading,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<span class='cpp-keyword'>int</span> nRow = -<span class='cpp-literal'>1</span>)</CODE> </TD>
<TD class=smallText width="100%">Inserts a row at the position given by nRow, or 
at the end of all rows if nRow is &lt; 0. <B>strHeading</B> is the row heading. 
The format of each cell in the row will be that of the cell in the first row of 
the same column. Returns the position of the inserted row.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL DeleteColumn(<span class='cpp-keyword'>int</span> nColumn)</CODE> </TD>
<TD class=smallText width="100%">Deletes column "nColumn", return TRUE on 
success.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL DeleteRow(<span class='cpp-keyword'>int</span> nRow)</CODE> </TD>
<TD class=smallText width="100%">Deletes row "nRow", return TRUE on 
success.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL DeleteAllItems()</CODE> </TD>
<TD class=smallText width="100%">Deletes all rows and contents in the 
grid.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL DeleteNonFixedRows()</CODE> </TD>
<TD class=smallText width="100%">Deletes all non-fixed rows in the 
grid.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL AutoSizeRow(<span class='cpp-keyword'>int</span> nRow, BOOL bResetScroll=TRUE)</CODE> </TD>
<TD class=smallText width="100%">Auto sizes the row to the size of the largest 
item. If <I>bResetScroll</I> is TRUE then the scroll bars will be 
reset.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL AutoSizeColumn(<span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UINT nAutoSizeStyle = 
GVS_DEFAULT,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BOOL 
bResetScroll = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Auto sizes the column to the size of the 
largest item. <I>nAutoSizeStyle</I> sets the way the autosize will occur (see <A 
href="#AutosizeOption">AutoSizing options</A>). If <I>bResetScroll</I> is TRUE 
then the scroll bars will be reset.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> AutoSizeRows()</CODE> </TD>
<TD class=smallText width="100%">Auto sizes all rows.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> AutoSizeColumns(UINT nAutoSizeStyle=GVS_DEFAULT)</CODE> 
</TD>
<TD class=smallText width="100%">Auto sizes all columns. <I>nAutoSizeStyle</I> 
sets the way the autosize will occur. (see <A href="#AutosizeOption">AutoSizing 
options</A>) </TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> AutoSize(UINT nAutoSizeStyle = GVS_DEFAULT)</CODE> </TD>
<TD class=smallText width="100%">Auto sizes all rows and columns. 
<I>nAutoSizeStyle</I> sets the way the autosize will occur. (see <A 
href="#AutosizeOption">AutoSizing options</A>)</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> ExpandColumnsToFit(BOOL bExpandFixed=TRUE)</CODE> </TD>
<TD class=smallText width="100%">Expands the column widths to fit the grid area. 
If <I>bExpandFixed</I> is TRUE then fixed columns will be modified, otherwise 
they will not be affected.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> ExpandLastColumn()</CODE> </TD>
<TD class=smallText width="100%">Expands the last column width to fill any 
remaining grid area.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> ExpandRowsToFit(BOOL bExpandFixed=TRUE)</CODE> </TD>
<TD class=smallText width="100%">Expands the row heights to fit the grid area. 
If <I>bExpandFixed</I> is TRUE then fixed rows will be modified, otherwise they 
will not be affected.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> ExpandToFit(BOOL bExpandFixed = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Expands the rows and columns to fit the grid 
area. If <I>bExpandFixed</I> is TRUE then fixed cells will be modified, 
otherwise they will not be affected.&lt;</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>CSize GetTextExtent(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol, LPCTSTR str)</CODE> 
</TD>
<TD class=smallText width="100%">Gets the size of the text pointed to by str for 
the given cell </TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>CSize GetCellTextExtent(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol)</CODE> </TD>
<TD class=smallText width="100%">Gets the size of the text of the given cell 
</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetRedraw(BOOL bAllowDraw, 
&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BOOL bResetScrollBars = FALSE)</CODE> </TD>
<TD class=smallText width="100%">Stops/starts redraws on things like changing 
the number of rows and columns and autosizing, but not for user-intervention 
such as resizes.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL RedrawCell(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> 
nCol,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
CDC* pDC = NULL)</CODE> </TD>
<TD class=smallText width="100%">Redraws the given cell. Drawing will be via the 
pDC if one is supplied.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL RedrawCell(<span class='cpp-keyword'>const</span> CCellID&amp; 
cell,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
CDC* pDC = NULL)</CODE> </TD>
<TD class=smallText width="100%">Redraws the given cell. Drawing will be via the 
pDC if one is supplied.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL RedrawRow(<span class='cpp-keyword'>int</span> row)</CODE> </TD>
<TD class=smallText width="100%">Redraws the given row.</TD></TR>
<TR>
<TD noWrap><CODE>BOOL RedrawColumn(<span class='cpp-keyword'>int</span> col)</CODE> </TD>
<TD class=smallText width="100%">Redraws the given column</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL Refresh()</CODE> </TD>
<TD class=smallText width="100%">Redraws the entire grid.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>CCellRange GetCellRange()</CODE> </TD>
<TD class=smallText width="100%">Gets the range of cells for the entire grid. 
See also <A href="#CCellRange">CCellRange</A><A>.</A></TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetSelectedRange(<span class='cpp-keyword'>const</span> CCellRange&amp; 
Range,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp; BOOL bForceRepaint = FALSE);</CODE> </TD>
<TD class=smallText width="100%">Sets the range of selected cells. See also <A 
href="#CCellRange">CCellRange</A><A>.</A></TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetSelectedRange(<span class='cpp-keyword'>int</span> nMinRow, <span class='cpp-keyword'>int</span> 
nMinCol,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp; <span class='cpp-keyword'>int</span> nMaxRow, <span class='cpp-keyword'>int</span> 
nMaxCol,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp; BOOL bForceRepaint = FALSE);</CODE> </TD>
<TD class=smallText width="100%">Sets the range of selected cells.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL IsValid(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol)</CODE> </TD>
<TD class=smallText width="100%">Returns TRUE if the given row and column is 
valid.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL IsValid(<span class='cpp-keyword'>const</span> CCellID&amp; cell)</CODE> </TD>
<TD class=smallText width="100%">Returns TRUE if the given cell is 
valid.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL IsValid(<span class='cpp-keyword'>const</span> CCellRange&amp; range)</CODE> </TD>
<TD class=smallText width="100%">Returns TRUE if the given cell range is 
valid.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>CCellID GetNextItem(CCellID&amp; cell, <span class='cpp-keyword'>int</span> 
nFlags)<BR>&nbsp;<span class='cpp-keyword'>const</span></CODE> </TD>
<TD class=smallText width="100%">Searches for a cell that has the specified 
properties and that bears the specified relationship to a given item. (See also 
CListCtrl::GetNextItem and <A href="#CellSearch">Cell Searching 
options</A>)</TD></TR></TBODY></TABLE>
<H2><A name=Sorting>Sorting</A></H2>
<TABLE cellSpacing=0 cellPadding=5 width="100%">
<TBODY>
<TR vAlign=top>
<TD noWrap width="50%"><CODE><span class='cpp-keyword'>void</span> SetHeaderSort(BOOL bSortOnClick = TRUE)</CODE> 
</TD>
<TD class=smallText width="100%">Sets whether or not rows are sorted on column 
header clicks in ListMode.</TD></TR>
<TR vAlign=top>
<TD noWrap width="50%"><CODE>BOOL GetHeaderSort()</CODE> </TD>
<TD class=smallText width="100%">Gets whether or not rows are sorted on column 
header clicks in ListMode.</TD></TR>
<TR vAlign=top>
<TD noWrap width="50%"><CODE>SetSortColumn(<span class='cpp-keyword'>int</span> nCol</CODE></TD>
<TD class=smallText width="100%">Sets the index of the currently sorted 
column.</TD></TR>
<TR vAlign=top>
<TD noWrap width="50%"><CODE><span class='cpp-keyword'>int</span> GetSortColumn()</CODE></TD>
<TD class=smallText width="100%">Gets the index of the currently sorted 
column.</TD></TR>
<TR vAlign=top>
<TD noWrap width="50%"><CODE><span class='cpp-keyword'>void</span> SetSortAscending(BOOL bAscending)</CODE></TD>
<TD class=smallText width="100%">Sets whether the current sort column is sorted 
ascending.</TD></TR>
<TR vAlign=top>
<TD noWrap width="50%"><CODE>BOOL GetSortAscending()</CODE></TD>
<TD class=smallText width="100%">Gets whether the current sort column is sorted 
ascending.</TD></TR>
<TR vAlign=top>
<TD noWrap width="50%"><CODE>BOOL SortTextItems(<span class='cpp-keyword'>int</span> nCol, BOOL 
bAscending,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
LPARAM data = <span class='cpp-literal'>0</span>)</CODE> </TD>
<TD class=smallText width="100%">Sorts the grid on the given column based on 
cell text. Returns TRUE on success.</TD></TR>
<TR vAlign=top>
<TD noWrap width="50%"><CODE>BOOL SortItems(<span class='cpp-keyword'>int</span> nCol, BOOL 
bAscending,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
LPARAM data = <span class='cpp-literal'>0</span>)</CODE> </TD>
<TD class=smallText width="100%">Sorts the grid on the given column based using 
the current comparison function. If no function has been specified then the rows 
are sorted by text. Returns TRUE on success. <BR>See also 
SetCompareFunction()</TD></TR>
<tr>
<TD noWrap width="50%"><CODE><span class='cpp-keyword'>void</span> SetCompareFunction(PFNLVCOMPARE 
pfnCompare)</CODE> </TD>
<TD class=smallText width="100%">Sets the callback function that will be used to 
sort the grid rows. See below for more details.</TD>
	</tr>
<TR vAlign=top>
<TD noWrap width="50%"><code><span class='cpp-keyword'>void</span> SetVirtualCompare(PVIRTUALCOMPARE VirtualCompare)</code></TD>
<TD class=smallText width="100%">Sets the callback function that will be used to 
sort the grid rows in virtual mode. See below for more details.</TD></TR>
<TR vAlign=top>
<TD noWrap width="50%"><CODE>BOOL SortItems(PFNLVCOMPARE pfnCompare, <span class='cpp-keyword'>int</span> 
nCol,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BOOL bAscending, LPARAM data = <span class='cpp-literal'>0</span>)</CODE> </TD>
<TD class=smallText width="100%">Sorts the grid on the given column using the 
supplied compare function pfnCompare. See CListCtrl::SortItems for information 
in the form of this function. Returns TRUE on success.</TD></TR></TBODY></TABLE>
<P>Sorting is achieved by calling one of the variants of <CODE>SortItems</CODE>, 
<CODE>SortTextItems</CODE>, or by the user clicking on a column header when in 
list mode.&nbsp; 
<P>The simplest way to handle sorting is to set the function that will be used 
in cell comparisons (by calling <CODE>SetCompareFunction</CODE> and/or <code>SetVirtualCompare</code>) and then 
calling <CODE>SortItems(<span class='cpp-keyword'>int</span> nCol, BOOL bAscending, LPARAM data = <span class='cpp-literal'>0</span>)</CODE>. 
<I>nCol</I> is the column to sort, <EM>bAscending</EM> sets whether the sort is 
in ascending or descending order, and <I>data</I> is application specific data 
that will be passed to the comparison function. 
<P>The comparison function must be a global or static function with the form 
</P><PRE><span class='cpp-keyword'>int</span> CALLBACK pfnCellCompare(LPARAM lParam1, LPARAM lParam2, LPARAM lParamSort)</PRE>
<P><I>lParam1</I> and <I>lParam2</I> will be <CODE>CGridCellBase</CODE> 
pointers, and <I>lParamSort</I> will be the application specific data you pass 
into the <CODE>SortItems</CODE> function as the <I>data</I> parameter. The 
function must return -1 if the first cell contains a value less than the second 
cell; 0 if they are equal, otherwise 1. 
<P>An example of a sort comparison function is as follows: </P><PRE><span class='cpp-keyword'>int</span> CALLBACK MyClass::pfnCellNumericCompare(LPARAM lParam1,
                                            LPARAM lParam2, 
                                            LPARAM lParamSort)
{
	CGridCellBase* pCell1 = (CGridCellBase*) lParam1;
	CGridCellBase* pCell2 = (CGridCellBase*) lParam2;
	<span class='cpp-keyword'>if</span> (!pCell1 || !pCell2) <span class='cpp-keyword'>return</span> <span class='cpp-literal'>0</span>;

	<span class='cpp-keyword'>int</span> nValue1 = _ttol(pCell1-&gt;GetText());
	<span class='cpp-keyword'>int</span> nValue2 = _ttol(pCell2-&gt;GetText());

	<span class='cpp-keyword'>if</span> (nValue1 &lt; nValue2)
		<span class='cpp-keyword'>return</span> -<span class='cpp-literal'>1</span>;
	<span class='cpp-keyword'>else</span> <span class='cpp-keyword'>if</span> (nValue1 == nValue2)
		<span class='cpp-keyword'>return</span> <span class='cpp-literal'>0</span>;
	<span class='cpp-keyword'>else</span>
		<span class='cpp-keyword'>return</span> <span class='cpp-literal'>1</span>;
}</PRE>
<P>Two functions have been provided for your convenience: </P><PRE><span class='cpp-keyword'>int</span> CALLBACK CGridCtrl::pfnCellTextCompare(LPARAM lParam1, 
                                           LPARAM lParam2, 
                                           LPARAM lParamSort)
<span class='cpp-keyword'>int</span> CALLBACK CGridCtrl::pfnCellNumericCompare(LPARAM lParam1, 
                                              LPARAM lParam2, 
                                              LPARAM lParamSort)</PRE>
<P>These sort by Text value and by numeric value (using <CODE>itoa</CODE> 
respectively. To set the comparison function for the grid simply call: </P><PRE>m_Grid.SetCompareFunction(CGridCtrl::pfnCellNumericCompare);</PRE>
<P>If the comparison function is set as NULL, 
<CODE>CGridCtrl::pfnCellTextCompare</CODE> will be used by default. 
<P>Sorting in Virtual mode requires you provide a function with the signature
<code><span class='cpp-keyword'>bool</span> (*PVIRTUALCOMPARE)(<span class='cpp-keyword'>int</span>, <span class='cpp-keyword'>int</span>);</code> to the function <code>SetVirtualCompare</code>. 
Needless to say this function will have to be optimised if you are trying to 
sort large amounts of data.<H2><A name=Printing>Printing</A></H2>
<TABLE cellSpacing=0 cellPadding=5 width="100%">
<TBODY>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> EnableWysiwygPrinting(BOOL bEnable = TRUE)</CODE> </TD>
<TD class=smallText width="100%">Set WYSIWYG Printing </TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetWysiwygPrinting()</CODE> </TD>
<TD class=smallText width="100%">Returns TRUE if WYSIWYG Printing is 
set</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> Print()</CODE> </TD>
<TD class=smallText width="100%">Prints the grid control on the user selected 
device. (Useful where the control is used in a dialog)</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnBeginPrinting(CDC 
*pDC,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
CPrintInfo *pInfo)</CODE> </TD>
<TD class=smallText width="100%">Used in a Doc/View environment. Call in your 
CView dervied class' OnBeginPrinting.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnPrint(CDC *pDC, CPrintInfo *pInfo)</CODE> </TD>
<TD class=smallText width="100%">Used in a Doc/View environment. Call in your 
CView dervied class' OnPrint.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnEndPrinting(CDC 
*pDC,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
CPrintInfo *pInfo)</CODE> </TD>
<TD class=smallText width="100%">Used in a Doc/View environment. Call in your 
CView dervied class' OnEndPrinting.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetShadedPrintOut(BOOL bEnable = TRUE)</CODE> </TD>
<TD class=smallText width="100%">If TRUE, colored cells will print as-is. If 
FALSE, all text prints as black on white.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE>BOOL GetShadedPrintOut()</CODE> </TD>
<TD class=smallText width="100%">Get's whether or not cells are printed shaded 
or as-is.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> SetPrintMarginInfo(<span class='cpp-keyword'>int</span> 
nHeaderHeight,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class='cpp-keyword'>int</span> nFooterHeight, 
<span class='cpp-keyword'>int</span> nLeftMargin,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class='cpp-keyword'>int</span> nRightMargin, 
<span class='cpp-keyword'>int</span> nTopMargin,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class='cpp-keyword'>int</span> nBottomMargin, 
<span class='cpp-keyword'>int</span> nGap)</CODE></TD>
<TD class=smallText width="100%">Set printing margin info.</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>void</span> GetPrintMarginInfo(<span class='cpp-keyword'>int</span> 
&amp;nHeaderHeight,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class='cpp-keyword'>int</span> 
&amp;nFooterHeight, <span class='cpp-keyword'>int</span> 
&amp;nLeftMargin,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class='cpp-keyword'>int</span> 
&amp;nRightMargin, <span class='cpp-keyword'>int</span> 
&amp;nTopMargin,&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class='cpp-keyword'>int</span> 
&amp;nBottomMargin, <span class='cpp-keyword'>int</span> &amp;nGap)</CODE> </TD>
<TD class=smallText width="100%">Get printing margin 
info.</TD></TR></TBODY></TABLE>
<H2><A name=Structures>Structures, defines and Messages</A></H2>
<H3>The CGridCellBase class</H3>
<P>This class is the base class for all grid cell classes, and holds the 
information for each cell. The class also defines a number of methods that are 
called by the grid itself, such as drawing and printing. Almost all methods and 
functions are virtual and this class is not designed to be used directly - 
rather it should be derived from. The default class <CODE>CGridCell</CODE> is 
derived from <CODE>CGridCellBase</CODE> and is used by the Grid control as the 
default cell class.</P>
<H4>Attributes</H4><PRE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> SetText(LPCTSTR szText);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> SetImage(<span class='cpp-keyword'>int</span> nImage);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> SetData(LPARAM lParam);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> SetState(DWORD nState);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> SetFormat(DWORD nFormat);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> SetTextClr(COLORREF clr);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> SetBackClr(COLORREF clr);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> SetFont(<span class='cpp-keyword'>const</span> LOGFONT* plf);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> SetGrid(CGridCtrl* pGrid);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> SetCoords(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nColumn);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> SetMargin(UINT nMargin);

<span class='cpp-keyword'>virtual</span> LPCTSTR  GetText() <span class='cpp-keyword'>const</span>         <span class='cpp-comment'>// returns the text in the cell</span>
<span class='cpp-keyword'>virtual</span> LPCTSTR  GetTipText() <span class='cpp-keyword'>const</span>      <span class='cpp-comment'>// return alternate tooltip text </span>
                                         <span class='cpp-comment'>// if you wish </span>
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>int</span>      GetImage() <span class='cpp-keyword'>const</span>        <span class='cpp-comment'>// returns image index for cell</span>
<span class='cpp-keyword'>virtual</span> LPARAM   GetData() <span class='cpp-keyword'>const</span>         <span class='cpp-comment'>// returns data associated with cell</span>
<span class='cpp-keyword'>virtual</span> DWORD    GetState() <span class='cpp-keyword'>const</span>        <span class='cpp-comment'>// returns cell state</span>
<span class='cpp-keyword'>virtual</span> DWORD    GetFormat() <span class='cpp-keyword'>const</span>       <span class='cpp-comment'>// returns cell format</span>
<span class='cpp-keyword'>virtual</span> COLORREF GetTextClr() <span class='cpp-keyword'>const</span>      <span class='cpp-comment'>// returns cell text color</span>
<span class='cpp-keyword'>virtual</span> COLORREF GetBackClr() <span class='cpp-keyword'>const</span>      <span class='cpp-comment'>// returns cell background color</span>
<span class='cpp-keyword'>virtual</span> LOGFONT* GetFont() <span class='cpp-keyword'>const</span>         <span class='cpp-comment'>// returns cell font as a LOGFONT</span>
<span class='cpp-keyword'>virtual</span> CFont*   GetFontObject() <span class='cpp-keyword'>const</span>   <span class='cpp-comment'>// returns a CFont object with the </span>
                                         <span class='cpp-comment'>// cell's font</span>
<span class='cpp-keyword'>virtual</span> UINT     GetMargin() <span class='cpp-keyword'>const</span>       <span class='cpp-comment'>// returns internal margin for cell</span>
<span class='cpp-keyword'>virtual</span> CGridCtrl* GetGrid() <span class='cpp-keyword'>const</span>       <span class='cpp-comment'>// returns grid that cell is associated </span>
                                         <span class='cpp-comment'>// with</span>
<span class='cpp-keyword'>virtual</span> CWnd*    GetEditWnd() <span class='cpp-keyword'>const</span>      <span class='cpp-comment'>// returns editing window for cell, </span>
                                         <span class='cpp-comment'>// or NULL</span>
    
<span class='cpp-keyword'>virtual</span> BOOL IsEditing() <span class='cpp-keyword'>const</span>
<span class='cpp-keyword'>virtual</span> BOOL IsFocused()  <span class='cpp-keyword'>const</span> 
<span class='cpp-keyword'>virtual</span> BOOL IsFixed()    <span class='cpp-keyword'>const</span> 
<span class='cpp-keyword'>virtual</span> BOOL IsFixedCol() <span class='cpp-keyword'>const</span>
<span class='cpp-keyword'>virtual</span> BOOL IsFixedRow() <span class='cpp-keyword'>const</span>
<span class='cpp-keyword'>virtual</span> BOOL IsSelected() <span class='cpp-keyword'>const</span> 
<span class='cpp-keyword'>virtual</span> BOOL IsReadOnly() <span class='cpp-keyword'>const</span>
<span class='cpp-keyword'>virtual</span> BOOL IsModified() <span class='cpp-keyword'>const</span>
<span class='cpp-keyword'>virtual</span> BOOL IsDropHighlighted() <span class='cpp-keyword'>const</span>
<span class='cpp-keyword'>virtual</span> BOOL IsDefaultFont() <span class='cpp-keyword'>const</span>       <span class='cpp-comment'>// TRUE if cell is using default</span>
                                         <span class='cpp-comment'>// font in grid</span>

<span class='cpp-keyword'>virtual</span> CGridCellBase* GetDefaultCell() <span class='cpp-keyword'>const</span>;
</PRE>
<H4>Operators</H4><PRE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> <span class='cpp-keyword'>operator</span>=(CGridCellBase&amp; cell);</PRE>
<H4>Operations</H4><PRE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> Reset();

<span class='cpp-keyword'>virtual</span> BOOL Draw(CDC* pDC, <span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol, CRect rect, 
                  BOOL bEraseBkgnd = TRUE);
<span class='cpp-keyword'>virtual</span> BOOL GetTextRect( LPRECT pRect)     - dimensions of text 
                                              within cell
<span class='cpp-keyword'>virtual</span> BOOL GetTipTextRect( LPRECT pRect)  - boundary <span class='cpp-keyword'>for</span> tooltips
<span class='cpp-keyword'>virtual</span> CSize GetTextExtent(LPCTSTR str)    - size of text
<span class='cpp-keyword'>virtual</span> CSize GetCellExtent(CDC* pDC)       - size of cell

<span class='cpp-comment'>// start and stop cell editing</span>
<span class='cpp-keyword'>virtual</span> BOOL Edit(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol, CRect rect, 
                  CPoint point, UINT nID, UINT nChar) 
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> EndEdit()

<span class='cpp-comment'>// Validates the results of an edit. If "str" is not a valid </span>
<span class='cpp-comment'>// value for the</span>
<span class='cpp-comment'>// cell then  return FALSE to have the edit rejected</span>
<span class='cpp-keyword'>virtual</span> BOOL ValidateEdit(LPCTSTR str);

<span class='cpp-keyword'>virtual</span> BOOL PrintCell(CDC* pDC, <span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol, CRect rect);

<span class='cpp-comment'>// This can ONLY be called by CGridCellBase derived classes, and </span>
<span class='cpp-comment'>// not CGridCellBase itself.</span>
LRESULT SendMessageToParent(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol, <span class='cpp-keyword'>int</span> nMessage);
</PRE>
<H4>Overridables</H4><PRE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnEndEdit();
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnMouseEnter();
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnMouseOver();
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnMouseLeave();
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnClick( CPoint PointCellRelative);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnClickDown( CPoint PointCellRelative);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnRClick( CPoint PointCellRelative);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnDblClick( CPoint PointCellRelative);
<span class='cpp-keyword'>virtual</span> BOOL OnSetCursor();
</PRE>
<P>This makes customising cells extremely simple. To install a new type of 
derived class for your grid cells, you can either override 
<CODE>CGridCtrl::CreateCell</CODE> and create your derived 
<CODE>CGridCellBase</CODE> cells, or you can use 
<CODE>CGridCtrl::SetCellType</CODE> and 
<CODE>CGridCtrl::SetDeafaultCellType</CODE> to automate this. 
<P>Simply create a new cell class derived from <CODE>CGridCellBase</CODE> or 
<CODE>CGridCell</CODE> (eg. <CODE>CMyGridCell</CODE>), and then replace the 
cells in the grid by calling </P><PRE>MyGrid.SetCellType(row, column, RUNTIME_CLASS(CMyGridCell));</PRE>
<P>The cell at (row,column) will now be of type <CODE>CMyGridCell</CODE>. 
<H3><A name=CCellID>The CGridCell class</A><A></H3>
<P>This class is derived from <CODE>CGridCellBase</CODE> and provides a default 
implementation for use with <CODE>CGridCtrl</CODE>. 
<H3></A><A name=CCellID>The CCellID class</A><A></H3>This is a handy helper 
class used to reference individual cells. All members are public. This class is 
adapted from Joe Willcoxsons original implementation. <PRE><span class='cpp-keyword'>class</span> CCellID
{    
<span class='cpp-keyword'>public</span>:
    <span class='cpp-keyword'>int</span> row, col; <span class='cpp-comment'>// The zero based row and column of the cell.</span>

    CCellID(<span class='cpp-keyword'>int</span> nRow = -<span class='cpp-literal'>1</span>, <span class='cpp-keyword'>int</span> nCol = -<span class='cpp-literal'>1</span>)

    <span class='cpp-keyword'>int</span> IsValid();
    <span class='cpp-keyword'>int</span> <span class='cpp-keyword'>operator</span>==(<span class='cpp-keyword'>const</span> CCellID&amp; rhs);
    <span class='cpp-keyword'>int</span> <span class='cpp-keyword'>operator</span>!=(<span class='cpp-keyword'>const</span> CCellID&amp; rhs);
}
</PRE>
<H3><A name=CCellRange>The CCellRange class</A></H3>
<P>This is a handy helper class used to reference cell ranges. This class is 
adapted from Joe Willcoxsons original implementation. </P><PRE><span class='cpp-keyword'>class</span> CCellRange
{ 
<span class='cpp-keyword'>public</span>:
    CCellRange(<span class='cpp-keyword'>int</span> nMinRow = -<span class='cpp-literal'>1</span>, <span class='cpp-keyword'>int</span> nMinCol = -<span class='cpp-literal'>1</span>, 
               <span class='cpp-keyword'>int</span> nMaxRow = -<span class='cpp-literal'>1</span>, <span class='cpp-keyword'>int</span> nMaxCol = -<span class='cpp-literal'>1</span>);
    <span class='cpp-keyword'>void</span> Set(<span class='cpp-keyword'>int</span> nMinRow = -<span class='cpp-literal'>1</span>, <span class='cpp-keyword'>int</span> nMinCol = -<span class='cpp-literal'>1</span>, 
             <span class='cpp-keyword'>int</span> nMaxRow = -<span class='cpp-literal'>1</span>, <span class='cpp-keyword'>int</span> nMaxCol = -<span class='cpp-literal'>1</span>);
    
    <span class='cpp-keyword'>int</span>  IsValid() <span class='cpp-keyword'>const</span>;
    <span class='cpp-keyword'>int</span>  InRange(<span class='cpp-keyword'>int</span> row, <span class='cpp-keyword'>int</span> col) <span class='cpp-keyword'>const</span>;       <span class='cpp-comment'>// Is the row/col in the range?</span>
    <span class='cpp-keyword'>int</span>  InRange(<span class='cpp-keyword'>const</span> CCellID&amp; cellID) <span class='cpp-keyword'>const</span>;  <span class='cpp-comment'>// is the cell in the range?</span>
    
    CCellID  GetTopLeft() <span class='cpp-keyword'>const</span>;                <span class='cpp-comment'>// Get topleft cell in range</span>
    CCellRange Intersect(<span class='cpp-keyword'>const</span> CCellRange&amp; rhs) <span class='cpp-keyword'>const</span>;&nbsp;
                                                <span class='cpp-comment'>// Returns the intersection of</span>
                                                <span class='cpp-comment'>// two cell ranges</span>

    <span class='cpp-keyword'>int</span> GetMinRow() <span class='cpp-keyword'>const</span>;                      <span class='cpp-comment'>// Self explanatory</span>
    <span class='cpp-keyword'>void</span> SetMinRow(<span class='cpp-keyword'>int</span> minRow);
    <span class='cpp-keyword'>int</span> GetMinCol() <span class='cpp-keyword'>const</span>;
    <span class='cpp-keyword'>void</span> SetMinCol(<span class='cpp-keyword'>int</span> minCol);
    <span class='cpp-keyword'>int</span> GetMaxRow() <span class='cpp-keyword'>const</span>;
    <span class='cpp-keyword'>void</span> SetMaxRow(<span class='cpp-keyword'>int</span> maxRow);
    <span class='cpp-keyword'>int</span> GetMaxCol() <span class='cpp-keyword'>const</span>;
    <span class='cpp-keyword'>void</span> SetMaxCol(<span class='cpp-keyword'>int</span> maxCol);

    <span class='cpp-keyword'>int</span> GetRowSpan() <span class='cpp-keyword'>const</span>;                    <span class='cpp-comment'>// Number of rows spanned</span>
    <span class='cpp-keyword'>int</span> GetColSpan() <span class='cpp-keyword'>const</span>;                    <span class='cpp-comment'>// Number of columns spanned</span>
    
    <span class='cpp-keyword'>void</span> <span class='cpp-keyword'>operator</span>=(<span class='cpp-keyword'>const</span> CCellRange&amp; rhs);
    <span class='cpp-keyword'>int</span>  <span class='cpp-keyword'>operator</span>==(<span class='cpp-keyword'>const</span> CCellRange&amp; rhs);
    <span class='cpp-keyword'>int</span>  <span class='cpp-keyword'>operator</span>!=(<span class='cpp-keyword'>const</span> CCellRange&amp; rhs);
}
</PRE>
<P><A name=GV_ITEM>The GV_ITEM structure</A><A>. This structure is used for 
Get/SetItem calls. </P><PRE><span class='cpp-keyword'>typedef</span> <span class='cpp-keyword'>struct</span> _GV_ITEM {
        <span class='cpp-keyword'>int</span>      row,col;   <span class='cpp-comment'>// Row and Column of item</span>
        UINT     mask;      <span class='cpp-comment'>// Mask for use in getting/setting cell data</span>
        UINT     state;     <span class='cpp-comment'>// cell state (focus/hilighted etc)</span>
        UINT     nFormat;   <span class='cpp-comment'>// Format of cell. Default imaplentation </span>
                            <span class='cpp-comment'>// used CDC::DrawText formats</span>
        CString  szText;    <span class='cpp-comment'>// Text in cell</span>
        <span class='cpp-keyword'>int</span>      iImage;    <span class='cpp-comment'>// index of the list view items icon</span>
        COLORREF crBkClr;   <span class='cpp-comment'>// Background colour (or CLR_DEFAULT)</span>
        COLORREF crFgClr;   <span class='cpp-comment'>// Forground colour (or CLR_DEFAULT)</span>
        LPARAM   lParam;    <span class='cpp-comment'>// 32-bit value to associate with item</span>
        LOGFONT  lfFont;    <span class='cpp-comment'>// cell font</span>
} GV_ITEM;</PRE></A><A name=GVL_Values>Grid line or scroll bar selection</A> <PRE>GVL_NONE      <span class='cpp-comment'>// No grid lines</span>
GVL_HORZ      <span class='cpp-comment'>// Horizontal lines only</span>
GVL_VERT      <span class='cpp-comment'>// Vertical lines only</span>
GVL_BOTH      <span class='cpp-comment'>// Both vertical and horizontal lines</span>
</PRE><A name=AutosizeOption>Autosizing options</A> <PRE>GVS_DEFAULT   <span class='cpp-comment'>// default </span>
GVS_HEADER    <span class='cpp-comment'>// Size using column fixed cells data only</span>
GVS_DATA      <span class='cpp-comment'>// Size using column non-fixed cells data only</span>
GVS_BOTH      <span class='cpp-comment'>// Size using column fixed and non-fixed</span>
</PRE><A name=CellMask>Cell data mask</A> <PRE>GVIF_TEXT      <span class='cpp-comment'>// Cell text will be accessed</span>
GVIF_IMAGE     <span class='cpp-comment'>// Cell image number will be accessed</span>
GVIF_PARAM     <span class='cpp-comment'>// Cell user data (lParam) will be accessed</span>
GVIF_STATE     <span class='cpp-comment'>// Cell state will be accessed</span>
GVIF_BKCLR     <span class='cpp-comment'>// Cell background colour will be accessed</span>
GVIF_FGCLR     <span class='cpp-comment'>// Cell foreground colour will be accessed</span>
GVIF_FORMAT    <span class='cpp-comment'>// Cell format field will be accessed</span>
GVIF_FONT      <span class='cpp-comment'>// Cell logical font will be accessed</span>
GVIF_MARGIN    <span class='cpp-comment'>// Cell margin information will be accessed </span>
GVIF_ALL       <span class='cpp-comment'>// All information will be accessed </span>
</PRE><A name=CellState>Cell states</A> <PRE>GVIS_FOCUSED     <span class='cpp-comment'>// Cell has focus</span>
GVIS_SELECTED    <span class='cpp-comment'>// Cell is selected</span>
GVIS_DROPHILITED <span class='cpp-comment'>// Cell is drop highlighted</span>
GVIS_READONLY    <span class='cpp-comment'>// Cell is read-only and cannot be edited</span>
GVIS_FIXED       <span class='cpp-comment'>// Cell is fixed</span>
GVIS_FIXEDROW    <span class='cpp-comment'>// Cell is part of a fixed row</span>
GVIS_FIXEDCOL    <span class='cpp-comment'>// Cell is part of a fixed column</span>
GVIS_MODIFIED    <span class='cpp-comment'>// Cell has been modified</span>
</PRE><A name=CellSearch>Cell Searching options</A> <PRE>GVNI_FOCUSED     <span class='cpp-comment'>// Search for focus cell</span>
GVNI_SELECTED    <span class='cpp-comment'>// Search for selected cells</span>
GVNI_DROPHILITED <span class='cpp-comment'>// Search for drop highlighted cells</span>
GVNI_READONLY    <span class='cpp-comment'>// Search for read-only cells</span>
GVNI_FIXED       <span class='cpp-comment'>// Search for fixed cells </span>
GVNI_MODIFIED    <span class='cpp-comment'>// Search for modified cells</span>

GVNI_ABOVE       <span class='cpp-comment'>// Search above initial cell</span>
GVNI_BELOW       <span class='cpp-comment'>// Search below initial cell</span>
GVNI_TOLEFT      <span class='cpp-comment'>// Search to the left of the initial cell</span>
GVNI_TORIGHT     <span class='cpp-comment'>// Search to the right of the initial cell</span>
GVNI_ALL         <span class='cpp-comment'>// Search all cells in the grid starting from</span>
                 <span class='cpp-comment'>// the given cell</span>
GVNI_AREA        <span class='cpp-comment'>// Search all cells below and to the right of </span>
                 <span class='cpp-comment'>// the given cell</span>
</PRE><A name=Messages>Notification messages</A> <PRE>GVN_BEGINDRAG      <span class='cpp-comment'>// Sent when dragging starts</span>
GVN_BEGINLABELEDIT <span class='cpp-comment'>// Sent when inplace editing starts</span>
GVN_ENDLABELEDIT   <span class='cpp-comment'>// Sent when inplace editing stops</span>
GVN_SELCHANGING    <span class='cpp-comment'>// Sent just before cell selection changes</span>
GVN_SELCHANGED     <span class='cpp-comment'>// Sent after cell selection changes</span>
GVN_GETDISPINFO    <span class='cpp-comment'>// A request for cell information when the grid is </span>
                   <span class='cpp-comment'>// in virtual mode</span>
GVN_ODCACHEHINT    <span class='cpp-comment'>// Cache hint when in virtual mode</span>
</PRE>
<P>These messages are exactly the same as their LVN_... counterparts, except 
they use an NM_GRIDVIEW structure: </P><PRE><span class='cpp-keyword'>typedef</span> <span class='cpp-keyword'>struct</span> tagNM_GRIDVIEW { 
    NMHDR hdr; 
    <span class='cpp-keyword'>int</span>   iRow; 
    <span class='cpp-keyword'>int</span>   iColumn; 
} NM_GRIDVIEW;
</PRE>
<H2><A name=Overrides>Protected overridable functions</A></H2>
<P>These functions have been made virtual to aid extensiblity. 
<P><B>Printing</B> - called in OnPrint. </P><PRE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> PrintColumnHeadings(CDC *pDC, CPrintInfo *pInfo);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> PrintHeader(CDC *pDC, CPrintInfo *pInfo); 
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> PrintFooter(CDC *pDC, CPrintInfo *pInfo);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> PrintRowButtons(CDC *pDC, CPrintInfo* pInfo);</PRE>
<P><B>Drag n' drop</B> </P><PRE><span class='cpp-comment'>// No longer necessary but I thought the code was cool so kept it :).</span>
<span class='cpp-keyword'>virtual</span> CImageList* CreateDragImage(CPoint *pHotSpot)  </PRE>
<P><B>Mouse Clicks</B> </P><PRE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnFixedColumnClick(CCellID&amp; cell);
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnFixedRowClick(CCellID&amp; cell);</PRE>
<P><B>Editing</B> </P><PRE><span class='cpp-comment'>// Starting edit</span>
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnEditCell(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol, CPoint point, 
                        UINT nChar) 
<span class='cpp-comment'>// ending edit</span>
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnEndEditCell(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol, CString str) 
<span class='cpp-comment'>// Create the inplace edit control</span>
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> CreateInPlaceEditControl(CRect&amp; rect, DWORD dwStyle, 
                                      <span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol,
                                      LPCTSTR szText, <span class='cpp-keyword'>int</span> nChar)</PRE>
<P><B>Drawing</B> </P><PRE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnDraw(CDC&amp; origDC);  <span class='cpp-comment'>// Draws everything</span></PRE>
<P><B>Construction and Cleanup</B> </P><PRE><span class='cpp-comment'>// Creates a new cell and initialises it.</span>
<span class='cpp-keyword'>virtual</span> CGridCellBase* CreateCell(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol)
                                                     
<span class='cpp-comment'>// Destroys a cell and performs any cleanup necessary</span>
<span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> DestroyCell(<span class='cpp-keyword'>int</span> nRow, <span class='cpp-keyword'>int</span> nCol)</PRE>
<H2><A name=Clipboard>Clipboard</A></H2>
<P>A number of Clipboard functions have been included.<BR>
<TABLE cellSpacing=0 cellPadding=5 width="100%">
<TBODY>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnEditCut()</CODE> </TD>
<TD class=smallText width="100%">Copies contents of selected cells to clipboard 
and deletes the contents of the selected cells. (Ctrl-X)</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnEditCopy()</CODE> </TD>
<TD class=smallText width="100%">Copies contents of selected cells to clipboard. 
(Ctrl-C)</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnEditPaste()</CODE> </TD>
<TD class=smallText width="100%">Pastes the contents of the clipboard to the 
grid. (Ctrl-V)</TD></TR>
<TR vAlign=top>
<TD noWrap><CODE><span class='cpp-keyword'>virtual</span> <span class='cpp-keyword'>void</span> OnEditSelectAll()</CODE> </TD>
<TD class=smallText width="100%">Not actually a clipboard function, but handy 
nevertheless. This routine selects all cells in the grid. 
(Ctrl-A)</TD></TR></TBODY></TABLE>
<H2><A name=EditValidate>Cell Editing and Validation</A></H2>
<P>There are several ways you can control whether or not cells can be edited, or 
indeed whether or not changes to cells should be accepted or rejected. 
<P>The simplest is to use <CODE>SetEditable(BOOL)</CODE>. This determines 
whether or not the cells in the grid can be edited. Finer scale control can be 
achieved by setting the <CODE>GVIS_READONLY</CODE> flag on a particular cell: 
</P><PRE><span class='cpp-keyword'>int</span> row = <span class='cpp-literal'>1</span>;
<span class='cpp-keyword'>int</span> col = <span class='cpp-literal'>10</span>;
m_Grid.SetItemState(row,col, m_Grid.GetItemState(row,col) | GVIS_READONLY);</PRE>
<P>Further control can be achieved by handling the 
<CODE>GVN_BEGINLABELEDIT</CODE> message. If the return value for this message is 
&lt; 0 then the edit attempt for the given cell will be rejected and the cell 
will be treated as read-only. This message is sent each time an edit attempt is 
made on a cell. 
<P>To handle the message, add a handler in your main window: </P><PRE>BEGIN_MESSAGE_MAP(CGridCtrlDemoDlg, CDialog)
	...
	<span class='cpp-comment'>// Add a handler</span>
	ON_NOTIFY(GVN_ENDLABELEDIT, IDC_GRID, OnGridEndEdit)
END_MESSAGE_MAP()

...

<span class='cpp-comment'>// GVN_ENDLABELEDIT</span>
<span class='cpp-keyword'>void</span> CGridCtrlDemoDlg::OnGridStartEdit(NMHDR *pNotifyStruct, 
                                       LRESULT* pResult)
{
    NM_GRIDVIEW* pItem = (NM_GRIDVIEW*) pNotifyStruct;
    
    <span class='cpp-comment'>// AllowCellToBeEdited is a fictional routine that should return TRUE </span>
    <span class='cpp-comment'>// if you want to allow the cell to be edited.</span>
    BOOL bAllowEdit = AllowCellToBeEdited(pItem-&gt;iRow, pItem-&gt;iColumn);

    *pResult = (bAllowEdit)? <span class='cpp-literal'>0</span> : -<span class='cpp-literal'>1</span>;
}
</PRE>
<P>Accepting or rejecting the new edited value for the cell can be achieved by 
handling the <CODE>GVN_ENDLABELEDIT</CODE> message in the same way </P><PRE><span class='cpp-comment'>// GVN_ENDLABELEDIT</span>
<span class='cpp-keyword'>void</span> CGridCtrlDemoDlg::OnGridEndEdit(NMHDR *pNotifyStruct, 
                                     LRESULT* pResult)
{
    NM_GRIDVIEW* pItem = (NM_GRIDVIEW*) pNotifyStruct;
    
    <span class='cpp-comment'>// AcceptChange is a fictional routine that should return TRUE</span>
    <span class='cpp-comment'>// if you want to accept the new value for the cell.</span>
    BOOL bAcceptChange = AcceptChange(pItem-&gt;iRow, pItem-&gt;iColumn);

    *pResult = (bAcceptChange)? <span class='cpp-literal'>0</span> : -<span class='cpp-literal'>1</span>;
}
</PRE>
<P>The final validation method you can use is to derive a new 
<CODE>CGridCellBase</CODE> class and override the <CODE>ValidateEdit</CODE> 
method. If this method returns TRUE then the edit is accepted, otherwise the 
edit is rejected. 
<H2><A name=Acknowledgements>Acknowledgements</A></H2>
<P>This would not have been possible without the following authors making their 
code freely available: 
<UL>
<LI><A href="mailto:chinajoe@aol.com">Joe Willcoxson</A>: Joe's original code 
spurred this project on, and provided the basic structure of this grid control. 
<LI><A href="mailto:keithr@europa.com">Keith Rule</A>: Keith provided a neat 
CMemDC class to make flicker free display simple, and provided sample OLE 
copy/paste/drag/drop code. 
<LI><A href="mailto:rreddy@braintech.com">Ravi Reddy</A>: I used a derivation of 
Ravi's listview printing code. 
<LI><A href="mailto:zafir@home.com">Zafir Anjum</A>: Provided the starting point 
for my CInPlaceEdit, the sorting routines and the TitleTip code. 
<LI>Eric Woodruff, Brian V. Shifrin, Scot Reed, Aqiruse, Ken Bertelson, Martin 
Daly for updates to the version 2.X classes - plus all the dozens that helped 
with previous versions. 
<LI>All those who freely contribute code to one another</A>: Without you all I 
would not have been able to write this. 
<LI>All those who sent in bug reports, suggestions, improvements and 
encouragement. Thank you!</LI></UL>
<H2><A name=History>History</A></H2>
<TABLE cellSpacing=5 width="100%">
<TBODY>
<TR vAlign=top>
<TD noWrap><B>Version</B></TD>
<TD><B>Comments</B></TD></TR>
<TR vAlign=top>
<TD class=smallText noWrap><B>1.0 - 1.13</B><BR>20 Feb 1998 - 6 May 1999</TD>
<TD class=smallText>First release version. Progressed from being a basic grid 
based on the original WorldCom Grid control written by Joe Willcoxson 
(mailto:chinajoe@aol.com, http://users.aol.com/chinajoe) to something a little 
more feature rich. Rewritten so many times I doubt there is a single line of 
Joe's code left. Many, many, MANY people sent in bug reports and fixes. Thank 
you all. </TD></TR>
<TR vAlign=top>
<TD class=smallText noWrap><B>2.0</B><BR>16 Feb 2000</TD>
<TD class=smallText>Rewritten to make the grid more object oriented, in that the 
CGridCell class now takes care of cell-specific tasks. This makes the code more 
robust, but more importantly it allows the simple insertion of other types of 
cells. Most of the bugs in the previous version have been fixed, especially the 
"ExpandToFit" functions and the cell selection/focus. I expect I've introduced a 
bunch more :)</TD></TR>
<TR vAlign=top>
<TD class=smallText noWrap><B>2.01</B><BR>23 Feb 2000</TD>
<TD class=smallText>Fixes by Eric Woodruff, 
&lt;Eric_Woodruff@compuserve.com&gt;<BR>Minor MemDC fix, In-place edit 
WM_KILLFOCUS, "PrintCell" added to CGridCell, plus changes to CGridCell::Draw. 
Added GetCellTextExtent, SetItemTextFmt to CGridCtrl + better print support. 
OnRButtonUp handler. various Clipboard and key handling fixes. Search for EFW. 
</TD></TR>
<TR vAlign=top>
<TD class=smallText noWrap><A name=New><B>2.02</B><BR></A>29 Feb 2000 </TD>
<TD class=smallText>Brian V. Shifrin, Scot Reed<BR>Fixes to reduce flicker, fix 
font selection bug, Fixed SetFixed[Row/Col]Count bug</TD></TR>
<TR vAlign=top>
<TD class=smallText noWrap><B>2.10</B><BR>11 Mar 2000 </TD>
<TD class=smallText>Ken Bertelson, Aqiruse and Chris Maunder<BR>Titletips now 
use cell color<BR>More attribute accessor functions, plus previously private 
functions now public<BR>Additions for virtual CGridCell support of embedded tree 
&amp; cell buttons implementation<BR>Optional WYSIWYG printing<BR>Awareness of 
hidden (0 width/height) rows and columns for key movements, cut, copy, paste, 
and autosizing<BR>CGridCell can make title tips display any text rather than 
cell text only<BR>Minor vis bug fixes<BR>CGridCtrl now works with CGridCellBase 
instead of CGridCell. This is a taste of things to come.<BR></TD>
<TR vAlign=top>
<TD class=smallText noWrap><B>2.11</B><BR>19 May 2000 </TD>
<TD class=smallText>Chris Maunder + Co<BR>Increasing fixed cells clashed with 
selected cells (Ivan Ilinov)<BR>AutoSizeRows obvous bug fixed<BR>OnLButtonDown 
fix (Ken Bertelson) <BR>ExpandToFit bug fixed (scrollbar space) (Igor 
Proskuriakov)<BR>List mode selection/deselection fixed<BR>Keyboard cell movement 
improved. You can now see the cells!<BR>m_nBarState MS madness fixed (Phil 
K)<BR></TD>
<TR vAlign=top>
<TD class=smallText noWrap><B>2.12</B><BR>26 May 2000 </TD>
<TD class=smallText>Martin Richter's fixes:<BR>If using TRY/CATCH (winCE) 
instead of try/catch (win32), e-&gt;Delete is not called<BR>EnsureVisible "fix" 
was fixed properly.<BR></TD>
<TR vAlign=top>
<TD class=smallText noWrap><B>2.13</B><BR>28 May 2000 </TD>
<TD class=smallText>Chris Maunder, Martin Richter, Ken 
Bertelson<BR>AutoSizeColumn works on either column header, data or 
both<BR>EnsureVisible. The saga continues.<BR>Rewrote exception 
handling<BR>Added the Get/EnableColumnHide and Get/EnableRowHide 
functions<BR></TD>
<TR vAlign=top>
<TD class=smallText noWrap><B>2.20</B><BR>29 July 2000</TD>
<TD class=smallText>Font storage optimised (suggested by Martin 
Richter)<BR>AutoSizeColumn works on either column header, data or 
both<BR>EnsureVisible. The saga continues... (Ken)<BR>Rewrote exception 
handling<BR>Added TrackFocusCell and FrameFocusCell properties, as well as 
ExpandLastColumn (suggested by Bruce E. Stemplewski).<BR>InsertColumn now allows 
you to insert columns at the end of the column range (David 
Weibel)<BR>Shift-cell-selection more intuitive<BR>API change: Set/GetGridColor 
now Set/GetGridLineColor<BR>API change: Set/GetBkColor now 
Set/GetGridBkColor<BR>API change: Set/GetTextColor, Set/GetTextBkColor 
depricated <BR>API change: Set/GetFixedTextColor, Set/GetFixedBkColor depricated 
<BR>Stupid DDX_GridControl workaround removed.<BR>Added "virtual mode" via 
Set/GetVirtualMode<BR>Added SetCallbackFunc to allow callback functions in 
virtual mode<BR>Added Set/GetAutoSizeStyle<BR>AutoSize() bug fixed<BR>added 
GVIS_FIXEDROW, GVIS_FIXEDCOL states<BR>added 
Get/SetFixed[Row|Column]Selection<BR>cell "Get" methods now const'd. Sorry 
folks...<BR>GetMouseScrollLines now uses win98/W2K friendly 
code<BR>WS_EX_CLIENTEDGE style now implicit<BR></TD>
<TR vAlign=top>
<TD class=smallText noWrap><B>2.21</B><BR>30 Aug 2000</TD>
<TD class=smallText>re-jigged OLE initialisation and drag/drop 
registration<BR>Cut and Paste bug fixed (empty cells not being treated 
correctly)<BR>Added "bExpandFixed" parameter to Expand*ToFit functions 
(Hans-Peter Werner)<BR>SetRedraw bug fixed<BR>Resizing 0-width last row and 
column now works<BR>Fixed CreateCell SetFormat bug (Loic Baudry)<BR>Fixed 
GetFixedTextColor typo (raybie@Exabyte.COM)<BR>Modified EnableScrollBars calls 
in Expand*ToFit functions (Simon Hughes)<BR>GetCellFromPt now 
public<BR>GV_CACHEHINT sent more appropriately, and also sent with -1 cellrange 
at the end of operations (so App can discard data - Martin 
Richter)<BR>CGridCellBase::operator= checks for NULL font before setting (Martin 
Richter)<BR>After drag/drop, mouse button was still marked as "down". 
Fixed.<BR></TD>
<TR vAlign=top>
<TD class=smallText noWrap><B>2.22</B><BR>1 Jan 2001</TD>
<TD class=smallText>SetModified bug in SetItem (Keith Worden)<BR>ifdef around 
SetItemTextFmt corrected for win32<BR>Save() bug fixed (row 0 saved 
twice)<BR>GetTopleftNonFixedCell, GetUnobstructedNonFixedCellRange and 
GetVisibleNonFixedCellRange have optional parameter to force recalc.<BR>added 
virtual ValidateEdit.<BR>if the return value from the SendMessage operation for 
GVN_ENDLABELEDIT or GVN_BEGINLABELEDIT is &lt; 0 then the edit, or the attempt 
to edit (respectively) is rejected.<BR>Added GetEditWnd to 
CGridCellBase<BR>Fixed the paste bug for cells being edited (Gary 
Lyben).<BR>GVN_SELCHANGING/GVN_SELCHANGED messages now sent 
correctly<BR>OnRButtonUp was not handling clicks on fixed cells 
correctly<BR>SB_ENDSCROLL message now sent on keypress initiated 
scroll<BR>GetCellTextExtent bug fixed (Elco)<BR>SetSelectedRange inefficiency 
fixed by huangchaoyi (ahaa007@263.net)<BR>DT_NOCLIP removed from 
CGridCellBase::Paint<BR>SetRowCount returns correct value on OOM condition 
(asigal@hotmail.com)<BR>Bug when editing using Japanese characters fixed 
(Michael Dunn)<BR>Fixed columns and rows printed correctly (fletch - 
untested)<BR>Added the "ClearCells" function<BR>Added the "SetCompareFunction" 
function and revamped sorting<BR>Added "GetEditWnd()" to CGridCellBase<BR>Added 
"GetTipText" to CGridCellBase<BR>
<TR>
<TD class=smallText vAlign=top noWrap><B>2.23</B><BR>22 July 2001</TD>
<TD class=smallText>Save/Load now take optional second parameter to set 
separator character<BR>When in list mode, fixed columns are no longer 
editable<BR>Combobox grid cells now auto-resize correctly<BR>Cells are printed 
using printer font, not screen font (Laura Michaels)<BR>ExpandLastColumn fixed 
(Jim Arnold)<BR>When entering DBCS chars into cells the first char was being 
lost (KiteFly)<BR>EnsureVisible no longer steals the focus 
(Damir)<BR>Ctrl+mouse-click no longer puts a cell into edit mode (useful for 
unselecting) (Richard Bouwman)<BR>SetModified/GetModified wasn't handling the 
first row or column (Ivan Melnychuk)<BR>GetCellFromPt Fixed cell check bug fixed 
(Jim Arnold)<BR>Plus a few nips and tucks (Simon Hughes and others)<BR>SetItem 
bug when setting select state fixed (Mik)<BR>ComboCell draw error (Joanna 
Sadler)<BR>NULL pointer reference bug fixed in GetTextRect (Jim 
Arnold)<BR>Drag/Drop handler functions now virtual<BR>Print() now accepts a 
pointer to a CPrintDialog object, so you can use your own print dialog when 
printing (Andrew Truckle)<BR>Cell drawing now uses CGridCellBase::GetTextExtent, 
which simplifies drawing logic for derived classes that embed controls. See the 
Checkbox cell for more info<BR>ValidateAndModifyCellContents no longer modifies 
read-only cells<BR>Drag and drop can now start from read-only cells (Jim 
Arnold)<BR>ResetScrollBars fixed (not fully checked though) - Paul 
Runstedler<BR>EraseBkgnd vis problem fixed (Sean McKinnon)<BR>ExpandLastColumn, 
ExpandRowsToFit and ExpandColumnsToFit now respect hidden 
rows/columns.<BR><B>Thanks to Podsypalnikov Eugen</B> for the DateTimeCtrl cell 
type. </TD></TR>
<TR vAlign=top>
<TD class=smallText noWrap><B>2.24</B><BR>4 July 2002</TD>
<TD class=smallText>Corrected compile errors in Visual C++ .NET<BR>Added 
CGridCellNumeric cell type - Andrew Truckle<BR>Selecting cells using the 
keyboard sends GVN_SELCHANG* messages to the parent - Arthur Westerman/Scot 
Brennecke<BR>When printing, the cells now use the grid's default cell colour 
unless otherwise specified<BR>Tabbing over hidden rows now works 
correctly<BR>EnsureVisible bug where NULL pFocusWnd was being used fixed - 
Patrick DellEra<BR>Client border now shows at startup even if size if cells is 
smaller than size of grid client area<BR>CGridCellBase members pure virtual - 
Scot Brennecke<BR>Minor code cleanups and clarifications<BR>Minor speed 
improvements (eg Optimised OnDraw for invisible cells)<BR>Pasted cells now set 
as selected<BR>Clicking on a fixed row no longer sets a focus cell (David 
Pritchard)<BR>DEL key now clears all selected cells </TD></TR>
<tr>
<TD class=smallText noWrap><B>2.25</B><BR>13 Mar 2004</TD>
<TD class=smallText>Minor changes so it will compile in VS.NET 2003 and 
Whidbey<BR>Fixed minor bug in EnsureVisible - Junlin Xu<BR>Changed 
AfxGetInstanceHandle for AfxGetResourceHandle in RegisterWindowClass<BR>Various 
changes thanks to Yogurt</TD>
</tr>
<TR vAlign=top>
<TD class=smallText noWrap><b><A name=New>2.26</A><br>
</b>15 Dec 2005</TD>
<TD class=smallText>All changes by Pierre Couderc<br>
Added sort in Virtual mode<br>
Change row/column order programatically or via drag and drop<br>
Added save/restore layer (for undoing row/column order changes)</TD></TR></TBODY></TABLE>

<!-- Article Ends -->

</div>

<script language="javascript" DEFER>Highlight(Array());</script>
<h2>About Chris Maunder</h2>
<table width='100%' border=0><tr valign=top><td nowrap class=smallText ><img src='/script/profile/images/{BB692055-05E8-418C-8481-E56773098B3C}.jpg'><br><br><img src='/script/images/admin_ico.gif' align=absbottom> Site Admin<br><img src='/script/images/admin_modify.gif' align=absbottom> Editor<br><img src='/script/images/sitebuild_icon.gif'> Site Builder</td><td class=smallText width='100%'>Chris is the Co-founder, Administrator, Architect, Chief Editor and Shameless Hack who wrote and runs CodeProject. He's been programming since 1988 while pretending to be, in various guises, an astrophysicist, mathematician, physicist, hydrologist, geomorphologist, defence intelligence researcher and then, when all that got a bit rough on the nerves, a web developer. He is a Microsoft Visual C++ MVP both globally and for Canada locally. <br><br>His programming experience includes C/C++, C#, MFC, ASP, ASP.NET, and far, far too much FORTRAN. He has worked on PocketPCs, AIX mainframes, Sun workstations, and a CRAY YMP C90 behemoth but finds notebooks take up less desk space.<br><br>He dodges, he weaves, and he never gets enough sleep. He is kind to small animals.<br><br>Chris was born and bred in Australia but splits his time between Toronto and Melbourne, depending on the weather. For relaxation he is into road cycling, snowboarding, rock climbing, and storm chasing.<br><p class=smallText>Click <a href='/script/profile/whos_who.asp?vt=arts&id=1'>here</a> to view Chris Maunder's online profile.</p></td></tr></table><br><table cellpadding=4 width='100%' border=0><tr valign=top><td width='100%'><h2>Other popular  articles:</h2><ul><li><a href="/miscctrl/umleditor.asp">UMLEditor - revisiting the vector editor</a><br><span class=smalltext>An UML editor with code-generation capabilities derived from CDiagramEditor.</span><li><a href="/miscctrl/urlcell.asp">Adding Hyperlink support to the MFC Grid Control</a><br><span class=smalltext>A new class that adds hyperlink support to the MFC Grid Control</span><li><a href="/miscctrl/minicalendar.asp">MS Outlook style miniature calendar control</a><br><span class=smalltext>A custom CWnd derived control which simulates the functionality of the MS Outlook mini calendar control.</span><li><a href="/miscctrl/colour_picker.asp">Office 97 style Colour Picker control</a><br><span class=smalltext>A simple drop in color chooser control</span></ul></td><td width=360><script language=javascript>document.write("<IFRAME src=\"/script/ann/ServeHTML.aspx?C=False&id=786&cb=3118826\" border=0 frameborder=0 scrolling=no width=300 height=250></IFRAME>");</script></td></tr></table>
		<form action="/script/rating/code/app/insert_vote.asp" method="post">
		<input type="hidden" name="vote_name" value="/miscctrl/gridctrl.asp">
		<input type="hidden" name="goal" value="/miscctrl/gridctrl.asp">

<table bgColor=#ff9900 border=0 cellPadding=1 cellSpacing=0 width="100%">
<tr><td width="100%">
<table bgColor=#FBEDBB border=0 cellPadding=4 cellSpacing=0 width="100%"><tr>
<td valign=middle class=smalltext>[<a href="#__top">Top</a>]</td>
<td align=right valign=middle nowrap >
<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'><b>Sign in</b></a> to vote for this article:&nbsp;&nbsp;&nbsp;&nbsp; <i>Poor</i><input type=radio value='1' style='disabled:true;' name=rate><input type=radio value='2' style='disabled:true;' name=rate><input type=radio value='3' style='disabled:true;' name=rate><input type=radio value='4' style='disabled:true;' name=rate><input type=radio value='5' style='disabled:true;' name=rate><i>Excellent</i>&nbsp;&nbsp;<input type=submit value=Vote class=FormButton style='disabled:true;'>
</td></tr>
</table></td></tr></table>
</form>
<table width=100% cellspacing=0 cellpadding=0 border=0><tr valign=top>
<td valign=top><center><script language=javascript>document.write("<a href=\"/script/admentor/admentorredir.asp?id=1812&way=ban\" target=_blank><img src=\"/script/ann/ServeImg.aspx?File=%2Fscript%2Fadmentor%2Fimages%2FUTB%5F120x60%2Egif&C=False&id=1812&cb=3118829\" alt=\"\" border=0 width=120 height=60></a>");</script></center><br></td>
<td valign=top nowrap align=center><span id=AdBanner5><script language=javascript>document.write("<IFRAME src=\"/script/ann/ServeHTML.aspx?C=False&id=1622&cb=3118823\" border=0 frameborder=0 scrolling=no width=468 height=60></IFRAME>");</script></span></td>
</tr></table>

</td></tr></table>

<a name='__comments'></a>

<script language="JavaScript">
var Selected = "";

var AdTime = new Date();


// Ensures the expanded message appears reasonably close to where 
// it should appear: on screen, and if possible, under the mouse cursor.
function SwitchMessage(e)
{
   if ( !e ) e = window.event;
   var target = e.target ? e.target : e.srcElement;

   // is it a post?
   while ( target && target.id != 'DynMessLink' )
      target = target.parentNode;
   if ( !target || target.id != 'DynMessLink' )
      return;

   if (Selected)
   {
      var body = document.getElementById(Selected + "_h1");
      if (body)
         body.style.display = 'none';
      var head = document.getElementById(Selected + "_h0");
      if (head)
         head.bgColor = '#FEF9E7';
   }

   if (Selected == target.name) // just collapse
      Selected="";
   else
   {
      Selected = target.name;
      var body = document.getElementById(Selected + "_h1");
      if (body)
      {
         if (body.style.display=='none')
            body.style.display='';
         else
            body.style.display = 'none';
      }
      var head = document.getElementById(Selected + "_h0");
      if (head)
         head.bgColor = '#99CCFF';

      if ( body && head && body.style.display != 'none' )
      {
         // the bit that keeps the post on-screen and under the cursor
         //var dif = (getRealPos(head, "Top") + head.offsetHeight/2) - (document.body.scrollTop+e.clientY);
         //document.body.scrollTop += dif;
         document.body.scrollTop = getRealPos(head, "Top") - document.body.clientHeight/10;
         EnsureMessageVisible(target.name, true);
      }
   }

   if ( e.preventDefault )
      e.preventDefault();
   else
      e.returnValue = false;
   return false;
}

// does its best to make a message visible on-screen (vs. scrolled off somewhere).
function EnsureMessageVisible(msgID, bShowTop) {
   var msgHeader = document.getElementById(msgID + "_h0");
   var msgBody = document.getElementById(msgID + "_h1");

   // determine scroll position of top and bottom
   var scrollContainer = document.body;
   var top = getRealPos(msgHeader, 'Top');
   var bottom = getRealPos(msgBody, 'Top') + msgBody.offsetHeight;

   // if not already visible, scroll to make it so
   if ( scrollContainer.scrollTop > top && !bShowTop)
      scrollContainer.scrollTop = top - document.body.clientHeight/10;
   if ( scrollContainer.scrollTop+scrollContainer.clientHeight < bottom )
      scrollContainer.scrollTop = bottom-scrollContainer.clientHeight;
   if ( scrollContainer.scrollTop > top && bShowTop)
      scrollContainer.scrollTop = top - document.body.clientHeight/10;
}

// utility
function getRealPos(i,which)
{
   iPos = 0
   while (i!=null)
   {
      iPos += i["offset" + which];
      i = i.offsetParent;
   }
   return iPos
}


</script>
<div id="_MessageBoard" onclick="SwitchMessage(event)"><table border=0 bgcolor='#ff9900' width=100% cellpadding=0 cellspacing=0><tr><td width='100%'><table border=0 id=ForumTable bgcolor='#ff9900' width=100% cellpadding=0 cellspacing=1><tr><td class=smallText bgcolor='#ffcc99'><b class=forum_hilite>Note</b>: You must <a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'><b>Sign in</b></a> to post to this message board.</td></tr><form action='/script/comments/app/do_filtermessages.asp?main=/miscctrl/gridctrl.asp&df=100&forumid=18' method=post><tr><td><table width=100% bgcolor=white border=0 cellspacing=0 cellpadding=3><tr bgcolor=#FBEDBB><td nowrap class=smalltext><a href='/script/comments/faq.asp'><img src='/script/images/forum_faq.GIF' border=0 width=16 height=16 align=absmiddle> <b>FAQ</b></a>&nbsp;</td><td nowrap valign=top align=right class=smalltext>Noise tolerance <select size=1 name=noise class=smalltext><option value="1">Very High</option>
<option value="2">High</option>
<option selected value="3">Medium</option>
<option value="4">Low</option>
<option value="5">Very low</option>
</select>&nbsp;&nbsp;</td><td class=smalltext nowrap align=right valign=middle colspan=2><a href='/script/comments/search_comments.asp?forumid=18'><img src="/script/images/forum_search.gif" width=16 height=15 border=0> Search comments</a> &nbsp;</td><td valign=top align=right><input type=submit value='Set Options' name=submit class=FormButton></td></tr><tr bgcolor='#ff9900'><td width='100%'>&nbsp;</td><td nowrap align=right valign=top class=smalltext>View <select size=1 name=expand class=smalltext><option value="0">Normal (slow)</option>
<option value="2">Preview (slow)</option>
<option selected value="5">Message View</option>
<option value="6">Topic View</option>
<option value="1">Thread View</option>
<option value="3">Expanded (Supporters only)</option>
</select>&nbsp;&nbsp;</td><td nowrap valign=top class=smalltext>Per page <select size=1 name=perpage class=smalltext><option value="10">10</option>
<option selected value="25">25</option>
<option value="50">50 (must logon)</option>
</select></td><td colspan=2>&nbsp;</td></tr></table>
</td></tr></form><tr bgcolor=#FBEDBB><td><a name=xx0xx></a><table border=0 cellpadding=2 width=100% bgcolor=#FBEDBB><tr><td>&nbsp;</td><td class=messagetitle>Msgs 1 to 25 of 2544 (Total: 2544) (<a href='/miscctrl/gridctrl.asp?df=100&forumid=18'>Refresh</a>)</td><td align=right nowrap><font class=messagetitle><span class=HoverLink >First</span> <span class=HoverLink >Prev</span> <a class=HoverLink name=HoverNL href='/miscctrl/gridctrl.asp?df=100&forumid=18&fr=26'>Next</a> <span class=HoverLink >&nbsp;&nbsp;&nbsp;&nbsp;</span> </font></td></tr></table>
</td></tr><tr bgcolor=white><td><table border=0 cellspacing=0 cellpadding=0 width='100%' border=0><tr><td width='70%' colspan=2 bgcolor=#FBEDBB><table border=0 cellspacing=0 cellpadding=2 width='100%'><tr><td class=messagetitle>Subject&nbsp;</td></tr></table></td><td width=140 bgcolor=#FBEDBB><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img src='/script/images/t.gif' border=0 width=1 height=1></td></tr><tr><td class=messagetitle>Author&nbsp;</td></tr><tr><td><img src='/script/images/t.gif' border=0 width=1 height=1></td></tr></table></td><td width='12%' bgcolor=#FBEDBB><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img src='/script/images/t.gif' border=0 width=1 height=1></td></tr><tr><td align=right class=messagetitle>Date&nbsp;</td></tr><tr><td><img src='/script/images/t.gif' border=0 width=1 height=1></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr bgcolor='#FEF9E7' id=1512620_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1512620xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1512620 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1512620#xx1512620xx'><b>what to do?</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=3007216'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>Chhoto Bou</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>7:36 1 Jun '06</b>&nbsp;</font></td></tr>
<tr id=1512620_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>Hello!<br><br>I can run ur code after setup vs6sp5.<br>as i am new in mfc what to do if i wish to use ur class to my work.<br><br>i am trying with Dialog based project not MIDI.<br><br>Hope u will ans. <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1512620&forumid=18&select=1512620#xx1512620xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1512620#xx1512620xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1508583_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1508583xx'></a><img align=absmiddle src='/script/images/news_question.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1508583 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1508583#xx1508583xx'><b>Making the Grid a dll problem [modified]</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=105225'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>semicolon</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>2:12 30 May '06</b>&nbsp;</font></td></tr>
<tr id=1508583_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>Hi,<br>I have the followings:<br>1. A Dll with the Grid Control (GridControl.dll)<br>2. A dll with a dialog using the Grid Control (Dialog.dll)<br>3. An exe that uses the dialog from DialogDll.dll<br><br>When i run the exe, it failed (the dialog was not displayed), what i did is the following:<br>Checked the 'no fail create' to see where it failed, and found out it could not find the control from the ID while in 'PrepareCtrl' of the DDX_Control of my custom control.<br><br>I then created another dialog, this time in the exe, which uses the same Grid Control from the GridControl.dll, and it worked!<br><br>It seems that the nesting of dll within dll, and the custom control registration some how got lost<br><br><br> -- modified at 20:50 Wednesday 31st May, 2006<br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1508583&forumid=18&select=1508583#xx1508583xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1508583#xx1508583xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle>Score: 2.0 (1 vote). </td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1508173_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1508173xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1508173 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1508173#xx1508173xx'><b>Sorting properly text and numbers</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=2518768'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>LoganKale</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>14:51 29 May '06</b>&nbsp;</font></td></tr>
<tr id=1508173_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>I have just added a handy little sort function that works pretty well.  It makes an automatical decision on the column looking for cells that seems to be numbers and cells that seem like text. If cells are text, it sort it with _tcscmp(..., ...), and if cells are numbers, it simply sort it with standar number comparators (ie a > b, etc..). <br><br>when configuring your grid do:<br><br>m_pGrid->SetCompareFunction(CGridCtrl::pfnCellAutoNumOrTextCompare);<br><br>In your GridCtrl.h add:<br><br><code><br>static int CALLBACK pfnCellAutoNumOrTextCompare(LPARAM lParam1, LPARAM lParam2, LPARAM lParamSort);<br></code><br><br>and in the GridCtrl.cpp file add<br><br><code><br>// Sorta different in case of being a number or only text<br>int CALLBACK CGridCtrl::pfnCellAutoNumOrTextCompare(LPARAM lParam1, LPARAM lParam2, LPARAM lParamSort)<br>{<br>	UNUSED_ALWAYS(lParamSort);<br><br>	CGridCellBase* pCell1 = (CGridCellBase*) lParam1;<br>	CGridCellBase* pCell2 = (CGridCellBase*) lParam2;<br>	if (!pCell1 || !pCell2) return 0;<br><br>	//Averiguo si las celdas son numeros o texto.<br>	CString szCel1(pCell1->GetText());<br>	CString szCel2(pCell2->GetText());<br><br>	long n= 0;<br>	<br>	// Elimino los numeros y espacios<br>	<br>	n= szCel1.FindOneOf(_T("0123456789"));<br>	while (n >= 0)<br>	{<br>		szCel1.Delete(n);<br>		n= szCel1.FindOneOf(_T("0123456789"));<br>	}<br>	szCel1.TrimLeft(); szCel1.TrimRight();<br><br>	n= szCel2.FindOneOf(_T("0123456789"));<br>	while (n >= 0)<br>	{<br>		szCel2.Delete(n);<br>		n= szCel2.FindOneOf(_T("0123456789"));<br>	}<br>	szCel2.TrimLeft(); szCel2.TrimRight();<br><br>	// Me fijo si tienen mas de una coma o punto decimal.<br>	n= szCel1.FindOneOf(_T(",."));<br>	if (n >= 0)<br>	{<br>		szCel1.Delete(n);<br>		if (szCel1.FindOneOf(_T(",.")) >= 0)<br>			pfnCellTextCompare(lParam1, lParam2, lParamSort);<br>	}<br><br>	// Me fijo si tienen mas de una coma o punto decimal.<br>	n= szCel2.FindOneOf(_T(",."));<br>	if (n >= 0)<br>	{<br>		szCel2.Delete(n);<br>		if (szCel2.FindOneOf(_T(",.")) >= 0)<br>			pfnCellTextCompare(lParam1, lParam2, lParamSort);<br>	}<br><br>	// "Else" .. .. <img src="/script/images/smiley_smile.gif" align=absmiddle><br>	return pfnCellNumericCompare(lParam1, lParam2, lParamSort);<br>};<br></code><br><br>That all!<br>May be it is useful for someone :<img src="/script/images/smiley_biggrin.gif" align=absmiddle>) <br><br>Emmanuel Oga <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1508173&forumid=18&select=1508173#xx1508173xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1508173#xx1508173xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1498814_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1498814xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1498814 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1498814#xx1498814xx'><b>How To make the Custom cell types like CCheckComboBox</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=170470'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>atanassov</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>11:10 22 May '06</b>&nbsp;</font></td></tr>
<tr id=1498814_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>I want to place Custom cell types like CCheckComboBox<br><br>Please give me any soultion.<br><br>Thank you for your advanced help.<br> <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1498814&forumid=18&select=1498814#xx1498814xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1498814#xx1498814xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1495826_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1495826xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1495826 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1495826#xx1495826xx'><b>Custom cell types problem</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=6146'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>Giurcanu Daniel</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>10:31 19 May '06</b>&nbsp;</font></td></tr>
<tr id=1495826_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>1. Open the demo<br>2. Select and edit a cell.<br>3. Without ending editing choose from menu Options|Select Virtual Mode.<br><br><br> <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1495826&forumid=18&select=1495826#xx1495826xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1495826#xx1495826xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1491494_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1491494xx'></a><img align=absmiddle src='/script/images/news_info.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1491494 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1491494#xx1491494xx'><b>Bug Report: Cannot call InsertColumn method</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=51990'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>Hoang Cuong</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>6:40 17 May '06</b>&nbsp;</font></td></tr>
<tr id=1491494_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>I always failed to call the InsertColumn method to insert columns into grid.<br>Does anyone have the same problem? And how to fix it?<br><br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1491494&forumid=18&select=1491494#xx1491494xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1491494#xx1491494xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1472503_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1472503xx'></a><img align=absmiddle src='/script/images/news_question.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1472503 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1472503#xx1472503xx'><b>Embedding a newline</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=2755643'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>smrtdrmmr</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>15:53 3 May '06</b>&nbsp;</font></td></tr>
<tr id=1472503_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>Is there a way to embed a \n character in a cell, thus making multiple lines of text within a cell?  Currently, setting a cell's text with a \n leaves a strange character, but not an effective line break.  I tried this with a \r too. <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1472503&forumid=18&select=1472503#xx1472503xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1472503#xx1472503xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=6></td></tr><tr bgcolor='#FEF9E7' id=1497436_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1497436xx'></a><img height=1 width=18 src='/script/images/ind.gif'><img align=absmiddle src='/script/images/news_answer.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1497436 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1497436#xx1497436xx'>Re: Embedding a newline</a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=1862614'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle >Ice1374&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle >11:43 21 May '06&nbsp;</font></td></tr>
<tr id=1497436_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img height=1 width=18 src='/script/images/ind.gif'><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>m_pGridCtrl->SetItemFormat(2,0, DT_WORDBREAK); <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1472503&forumid=18&select=1497436#xx1497436xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1497436#xx1497436xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1470435_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1470435xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1470435 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1470435#xx1470435xx'><b>OnGridClick doesn't work for 2 grids on same dialog</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=476698'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>ClintMonari</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>11:19 2 May '06</b>&nbsp;</font></td></tr>
<tr id=1470435_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>I have two grids on the same dialog.  The grids operate perfectly, except that the OnGridClick(...) function is not getting called when I click on a grid.<br><br>Any thoughts? <br><br>clintMonari<br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1470435&forumid=18&select=1470435#xx1470435xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1470435#xx1470435xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=6></td></tr><tr bgcolor='#FEF9E7' id=1470440_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1470440xx'></a><img height=1 width=18 src='/script/images/ind.gif'><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1470440 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1470440#xx1470440xx'>Re: OnGridClick doesn't work for 2 grids on same dialog</a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=476698'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle >ClintMonari&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle >11:25 2 May '06&nbsp;</font></td></tr>
<tr id=1470440_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img height=1 width=18 src='/script/images/ind.gif'><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>Nevermind.  Silly me forgot to assign the correct resource IDs for the grid in: ON_NOTIFY(NM_CLICK, IDC_MY_GRID_ONE, OnGridClick) and<br>ON_NOTIFY(NM_CLICK, IDC_MY_GRID_TWO, OnGridClick. <br><br>clintMonari<br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1470435&forumid=18&select=1470440#xx1470440xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1470440#xx1470440xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1466930_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1466930xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1466930 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1466930#xx1466930xx'><b>Setting an image to the right of cell text</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=476698'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>ClintMonari</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>12:32 28 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1466930_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>I can successfully put an image in a cell, and also can successfully put accompanying text in that same cell.  However, the image always shows up to the LEFT of my text.  I want the text on the left, and the image on the right.  Can this be done? <br><br>clintMonari<br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1466930&forumid=18&select=1466930#xx1466930xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1466930#xx1466930xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle>Score: 1.0 (1 vote). </td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1466734_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1466734xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1466734 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1466734#xx1466734xx'><b>Little bug in grid LDoubleClick</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=2318676'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>tanov</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>9:47 28 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1466734_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>When I doubleclick the row grid line the cells are resized in wrong way. The problem is in the CGridCtrl::OnLButtonDblClk(UINT nFlags, CPoint point) method.<br><br>The original code is:<br>    else if (m_MouseMode == MOUSE_OVER_ROW_DIVIDE)<br>#endif<br>    {<br>        CPoint start;<br>        if (!GetCellOrigin(0, cell.col, &start))<br>            return;<br><br>And the fixed one is:<br>    else if (m_MouseMode == MOUSE_OVER_ROW_DIVIDE)<br>#endif<br>    {<br>        CPoint start;<br>        // bug-fix by Tanov<br>        if (!GetCellOrigin(cell.row, 0, &start))<br>            return;<br><br>I think that it is a copy/paste error from the MOUSE_OVER_COL_DIVIDE part. <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1466734&forumid=18&select=1466734#xx1466734xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1466734#xx1466734xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1462965_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1462965xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1462965 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1462965#xx1462965xx'><b>How to show vertical scrollbar</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=2897204'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>parang1013</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>1:44 26 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1462965_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>I can't find any option or function to show vertical scrollbar.<br><br>Please give me any soultion.<br><br>Thank you for your advanced help.<br><br>DH Kim<br> <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1462965&forumid=18&select=1462965#xx1462965xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1462965#xx1462965xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1461337_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1461337xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle style='color:#AA0000;' ><a class=messagetitle style='color:#AA0000;'  id=DynMessLink name=1461337 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1461337#xx1461337xx'><b>Picture in Grid Control</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=1235604'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle style='color:#AA0000;'  ><b>B Sivarama Krishnan</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle style='color:#AA0000;'  ><b>1:16 25 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1461337_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>How can a picture be added to a grid control? <br><br>B Sivarama Krishnan<br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1461337&forumid=18&select=1461337#xx1461337xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1461337#xx1461337xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle>Score: 5.0 (1 vote). </td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1455477_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1455477xx'></a><img align=absmiddle src='/script/images/news_question.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1455477 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1455477#xx1455477xx'><b>Show hidden row when set focus</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=1903056'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>r.teox</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>11:31 19 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1455477_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>Hi, i have a little problem: I have for example 30 rows but the windows is too small to show all rows, so vertical scrollbar appears.<br>Then, I must set the focus to row number 30, I do this, but for view the focused row i must scroll until end of grid.<br>Is possible to automatic show the row that receive the focus even when this row is not visible (before the focus the grid show row 1 to 10, after set the focus to row 15 the grid automatic show row 15 to 25)?<br>Thanks a lot. <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1455477&forumid=18&select=1455477#xx1455477xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1455477#xx1455477xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1451363_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1451363xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1451363 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1451363#xx1451363xx'><b>Slider within Grid Control Cell</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=2749713'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>Tier5</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>12:08 16 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1451363_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>I would like to place a Slider control in cell of the MFC Grid control.<br>Has anybody out there done this and would share it with me?<br><br>Thank you<img src="/script/images/smiley_smile.gif" align=absmiddle> <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1451363&forumid=18&select=1451363#xx1451363xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1451363#xx1451363xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle>Score: 1.0 (1 vote). </td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1450952_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1450952xx'></a><img align=absmiddle src='/script/images/news_question.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1450952 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1450952#xx1450952xx'><b>Set capture in LButtonDown</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=2595961'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>Dab Darklighter</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>15:06 15 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1450952_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>First, Thanks for this great control.  It has been very useful in my current project.  <br><br>I'm having a problem with the mouse down function.  If I click in the Grid and then move the mouse out of the grid before releasing the mouse button, the rest of my dialog will not respond.  If I call ReleaseCapture() at the end of the OnLButtonDown function in GridCtrl.cpp, the problem goes away and I do not notice any loss of functionality.  My question then is why does OnLButtonDown call SetCapture in the first place? <br><br>Thanks again. <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1450952&forumid=18&select=1450952#xx1450952xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1450952#xx1450952xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle>Score: 2.0 (1 vote). </td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1447778_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1447778xx'></a><img align=absmiddle src='/script/images/news_question.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1447778 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1447778#xx1447778xx'><b>How To make the Grid control Transparent ??</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=2664858'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>vijayeta</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>0:57 13 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1447778_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent><img src="/script/images/smiley_confused.gif" align=absmiddle>I want to place the Grid control on a document with a Background image . How do i make the Grid control transparent so that the background image is still visible ??<br><br>Thanks in Advance <br><br>Vijayeta<br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1447778&forumid=18&select=1447778#xx1447778xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1447778#xx1447778xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1447632_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1447632xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1447632 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1447632#xx1447632xx'><b>How to make custom cell types give notification</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=1132187'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>zlatnik</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>20:10 12 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1447632_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>I am working on this myself, using the ideas in COptionTree as my example.  The only problem, at least for the combo cell, it appears to be a complicated combination of three different classes: CInPlaceList, CComboEdit, and CGridCellCombo.  <br><br>If anybody out there has made changes to GridCellCombo.h and .cpp files for handling notification, sharing any secret about how the notification occuring in CInPlaceList can get to CGridCellCombo, that would be really useful.<br><br>Thanks for your consideration in this.<br>Sean <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1447632&forumid=18&select=1447632#xx1447632xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1447632#xx1447632xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=6></td></tr><tr bgcolor='#FEF9E7' id=1447672_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1447672xx'></a><img height=1 width=18 src='/script/images/ind.gif'><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1447672 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1447672#xx1447672xx'>Nevermind, I found a solution</a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=1132187'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle >zlatnik&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle >21:07 12 Apr '06&nbsp;</font></td></tr>
<tr id=1447672_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img height=1 width=18 src='/script/images/ind.gif'><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>I got it. <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1447632&forumid=18&select=1447672#xx1447672xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1447672#xx1447672xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1446531_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1446531xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1446531 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1446531#xx1446531xx'><b>Fix problem with copy and paste unicode text</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=661107'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>ikus</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>7:02 12 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1446531_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>Hi<br>I met problem when I want copy and paste unicode text and after small investigation I found few bugs. Below fixed snippet of code:<br><br>COleDataSource* CGridCtrl::CopyTextFromGrid()<br>{<br>...<br>    sf.Write(str.GetBuffer(1), str.GetLength() * sizeof(TCHAR));<br>    str.ReleaseBuffer();<br>    }<br>        <br>    TCHAR c = '\0';<br>    sf.Write(&c, sizeof(TCHAR));<br><br>...<br>}<br><br>Moreover should be replace CF_TEXT by CF_UNICODETEXT.<br><br>regards <br><br>Roman K&#281;delski<br><br> -- modified at 7:15 Wednesday 12th April, 2006<br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1446531&forumid=18&select=1446531#xx1446531xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1446531#xx1446531xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1444774_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1444774xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1444774 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1444774#xx1444774xx'><b>In CView</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=2479708'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>pjmvn</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>5:11 11 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1444774_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>I don't know:<br>  How to create this Grid in CView?<br>  How to catch events of the Grid object in CView (ex: click, start select, ...) same on dialog?<br><br>Please help me.<br>Thanks <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1444774&forumid=18&select=1444774#xx1444774xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1444774#xx1444774xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=6></td></tr><tr bgcolor='#FEF9E7' id=1470192_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1470192xx'></a><img height=1 width=18 src='/script/images/ind.gif'><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1470192 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1470192#xx1470192xx'>Re: In CView</a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=295338'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle >Leonhardt Wille&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle >8:36 2 May '06&nbsp;</font></td></tr>
<tr id=1470192_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img height=1 width=18 src='/script/images/ind.gif'><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>Hi there,<br>take a look at <a href = "http://codeproject.com/miscctrl/grid_in_view.asp?df=100&forumid=329&exp=0" rel="nofollow">Using the Grid Control in a Doc/View framework<br>By Chris Maunder</a>[<a href = "http://codeproject.com/miscctrl/grid_in_view.asp?df=100&forumid=329&exp=0" target = "_blank" rel="nofollow">^</a>]<br><br>Don't forget to pass the control ID of your grid to CGridCtrl::Create. You have to create this ID (e.g. IDC_MYGRID) either by defining it in the header of your view or by creating a resource ID in the resource editor.<br>To receive messages, you can put<br><code><br>ON_NOTIFY(NM_DBLCLK, IDC_MYGRID, OnGridCellDblClick)<br></code><br>into the message map of your view.<br>The grid control sends notification messages to its parent window with a NM_GRIDVIEW structure attached. The function <code>SendMessageToParent</code> is called whenever a notification message has to be sent, so if you want to see which messages you can get just search for this function. <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1444774&forumid=18&select=1470192#xx1470192xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1470192#xx1470192xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1444045_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1444045xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1444045 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1444045#xx1444045xx'><b>Hang in Refresh() with multithreads</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=2896211'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>MESSAGE_MAP</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>15:54 10 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1444045_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent>Hi,<br><br>I'm trying to implement CGridCtrl in an MFC extension DLL so that the dll can be dynamically loaded into another program which can call the dll to created dialog boxes which contain Grid controls.  Each dialog box runs in it's own CWinThread.  So far, so good (with help from somebody's previous posts on changing the instance reference for dll use).<br><br>However, in each thread I use a timer to update the display of the values in the grid using the virtual mode.  In the OnTimer handler, I call Refresh().  With one window open, the display updates properly.  However, if another window is open, Refresh() will cause failed exceptions and assertions.  I've observed many different types from many different code locations (too numerous to mention).  I have verified that the CGridCtrls are completely running in separate threads.<br><br>I searched through the topics in the forum and didn't find anything relevant (although I may have missed something).  Any help or suggestions would be greatly appreciated!  <br><br>Thanks. <br> <br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1444045&forumid=18&select=1444045#xx1444045xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1444045#xx1444045xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle>Score: 1.0 (2 votes). </td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr><tr height=1><td colspan=4 bgcolor='#ff9900'><img src='/script/images/t.gif' width=1 height=1></td></tr><tr bgcolor='#FEF9E7' id=1443847_h0><td width='70%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td bgcolor=white><a name='xx1443847xx'></a><img align=absmiddle src='/script/images/news_general.gif'>&nbsp;</td>
<td width='100%' class=messagetitle><a class=messagetitle id=DynMessLink name=1443847 href='/miscctrl/gridctrl.asp?df=100&forumid=18&select=1443847#xx1443847xx'><b>Custom cell types, like ComboBoxes, CheckBoxes etc.</b></a></td></tr></table></td><td valign=bottom><a href='/script/profile/whos_who.asp?id=243871'><img src='/script/images/userinfo.gif' title='Click for User Profile' border=0 width=14 height=15></a>&nbsp;</td><td width=140 nowrap><font class=messagetitle ><b>Arfa</b>&nbsp;</font></td><td nowrap align=right width='12%'><font class=messagetitle ><b>12:35 10 Apr '06</b>&nbsp;</font></td></tr>
<tr id=1443847_h1 style='display:none' ><td colspan=4 width='100%'><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td><img align=absmiddle src='/script/images/news_blank.gif'>&nbsp;</td><td bgcolor='#D5EAFF' width='100%'><table border=0 cellspacing=5 cellpadding=0 width='100%'><tr><td><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr><td colspan=2><font class=messagecontent><br>This is really just a tip, to ward you away from a little gotcha that stumped me for a while.<br><br>When you call the function SetCellType so your own specific class is used to edit a cell. e.g. a drop down combobox or check box in a cell; you still must set your grid to be editable! Otherwise the cell remains just as it is.<br><br>So:-<br>  // Call this first:-<br>  pYourGrid.SetEditable(TRUE);<br>  // then call this:-<br>  pYourGrid.SetCellType(nRow, nCol, RUNTIME_CLASS(CGridCellCombo));<br><br>May be cool to have a little note in these docs somewhere to mention this. <br><br>- Arthur.<br>&nbsp;</font></td></tr><tr valign=top><td class=messagetitle>[<a href='/script/profile/logon.asp?ct=%2Fmiscctrl%2Fgridctrl%2Easp'>Sign in</a>][<a	href='/miscctrl/gridctrl.asp?df=100&tid=1443847&forumid=18&select=1443847#xx1443847xx' title='View only messages within this thread'>View Thread</a>][<a	href='/miscctrl/gridctrl.asp?msg=1443847#xx1443847xx' title='Get the URL for this message'>Get Link</a>]</td><td align=right class=messagetitle></td></tr></table></td></tr></table></td></tr></table></td></tr>
<tr><td colspan=4><img src='/script/images/t.gif' border=0 width=1 height=5></td></tr></table></td></tr><tr bgcolor=#FBEDBB><td><table width='100%' cellpadding=2><tr><td class=messagetitle>Last Visit: 8:36 Saturday 3rd June, 2006</td><td align=right nowrap><font class=messagetitle><span class=HoverLink >First</span> <span class=HoverLink >Prev</span> <a class=HoverLink name=HoverNL href='/miscctrl/gridctrl.asp?df=100&forumid=18&fr=26'>Next</a> <span class=HoverLink >&nbsp;&nbsp;&nbsp;&nbsp;</span> </font></td></tr></table></td></tr></table></td></tr></table>
</div><p class=smallText><img align=absmiddle src='/script/images/news_general.gif'> General comment &nbsp;&nbsp; <img align=absmiddle src='/script/images/news_info.gif'> News / Info &nbsp;&nbsp; <img align=absmiddle src='/script/images/news_question.gif'> Question &nbsp;&nbsp; <img align=absmiddle src='/script/images/news_answer.gif'> Answer &nbsp;&nbsp; <img align=absmiddle src='/script/images/news_game.gif'> Joke / Game &nbsp;&nbsp; <img align=absmiddle src='/script/images/news_sticky.gif'> Admin message</p>
<br>


<table width=100% cellspacing=5>
<tr valign=top><td>
<font size=1 style="font-size:7pt"><a href='/?cat=1'>All Topics</a>, <a href='/?cat=2'>MFC / C++</a> &gt;&gt; <a href='/miscctrl/'>Miscellaneous Controls</a> &gt;&gt; <a href='/miscctrl/#Grid+Control'>Grid Control</a>
<br>Updated: 15 Dec 2005 7:45
</font>
</td><td align=right>
<font size=1 style="font-size:7pt">
Article content copyright Chris Maunder, 1999<br>
everything else Copyright © <A href='mailto:webmaster@codeproject.com'>CodeProject</A>, 1999-2006</a>.

<br>
Web5 |
<a href='/info/MediaKit'>Advertise on The Code Project</a> | <a href="/info/privacy.asp">Privacy</a>

</td></tr>
</table>

<br>
<center>
<table border="0" cellspacing="0" cellpadding="0" width="95%">
<tr><td height=1 bgcolor=#ff9900><img src='/images/space.gif' height=1></td></tr>
<tr>
<td align=center><font size=1>

<a href="http://www.theultimatetoolbox.com">The Ultimate Toolbox</a> 
<a href="http://www.ASPAlliance.com/">ASP Alliance</a> 
<a href="http://www.developerfusion.co.uk/">Developer Fusion</a> 
<a href="http://www.developersdex.com/">Developersdex</a> 
<a href="http://www.devguru.com/">DevGuru</a> 
<a href="http://www.programmersheaven.com/">Programmers Heaven</a> 
<A href="http://www.planet-source-code.com/">Planet Source Code</a> 
<a href="http://www.tek-tips.com/">Tek-Tips Forums</a> 

</font>	
</td>
</tr>
</table>
</center>

</body>
</html>
