;-------------------------------------------------------------
; includes
;-------------------------------------------------------------

include windows.inc
include user32.inc
include kernel32.inc
include comdlg32.inc
include comctl32.inc
include shell32.inc
include	shlwapi.inc
include masm32.inc

;-------------------------------------------------------------
; libraries
;-------------------------------------------------------------

includelib user32.lib
includelib kernel32.lib
includelib comdlg32.lib
includelib comctl32.lib
includelib shell32.lib
includelib shlwapi.lib
includelib masm32.lib

;-------------------------------------------------------------
; prototypes
;-------------------------------------------------------------

DlgProc				PROTO :DWORD,:DWORD,:DWORD,:DWORD
TimerProc			PROTO :DWORD,:DWORD,:DWORD,:DWORD
OpenPort			PROTO :DWORD,:DWORD,:DWORD,:DWORD
JustStop			PROTO
EnableSetup			PROTO
ThreadProc			PROTO :DWORD

;-------------------------------------------------------------
; resources
;-------------------------------------------------------------

IDD_DLG				equ 1000
IDC_OPEN			equ 1001
IDC_START			equ 1002
IDC_LBLFN			equ 1004
IDC_FN				equ 1005
IDC_DATA			equ 1006
IDC_LBL0			equ 1007
IDC_LBL1			equ 1008
IDC_LBL2			equ 1009
IDC_LBL3			equ 1010
IDC_K				equ 1011
IDC_S				equ 1012
IDC_D				equ 1013
IDC_T				equ 1014
IDC_LBLSTATUS		equ 1015
IDC_STATUS			equ 1016
IDC_OUTPUT			equ 1017
IDC_LBLPORT			equ 1018
IDC_PORT			equ 1019
IDC_LBLSPEED		equ 1020
IDC_SPEED			equ 1021
IDC_LBLPARITY		equ 1022
IDC_PARITY			equ 1023
IDC_LBLSTOPBITS		equ 1024
IDC_STOPBITS		equ 1025
IDC_ABOUT			equ 1026
IDC_EXIT			equ 1027
IDC_HELPP			equ 1029
IDC_INPUT			equ 1003
IDC_LBLPORT2		equ 1036
IDC_PORT2			equ 2019
IDC_LBLSPEED2		equ 1034
IDC_SPEED2			equ 2021
IDC_LBLPARITY2		equ 1032
IDC_PARITY2			equ 2023
IDC_LBLSTOPBITS2	equ 1030
IDC_STOPBITS2		equ 2025
IDC_LBLREPORT		equ 1028
IDC_REPORT			equ 1031
IDC_DIFF			equ 1033
IDC_LBLLA			equ 1035
IDC_LBLLO			equ 1037
IDC_LA				equ 1038
IDC_LO				equ 1039
IDC_IFOUT1			equ 1040
IDC_IFOUT2			equ 1041

;-------------------------------------------------------------
; defines
;-------------------------------------------------------------

WM_DATA_RECEIVED	equ	WM_USER+100h

InComBuf			equ 2048
OutComBuf			equ 256

Epsilon				equ 2

IDT_TIMER			equ	999
tmrInterval			equ 200	;in milliseconds
FileNameSize		equ 300

SeparatorSub		equ '-'
SeparatorMain		equ ' '

;-------------------------------------------------------------
; constants
;-------------------------------------------------------------


;-------------------------------------------------------------
; vars
;-------------------------------------------------------------

.data

	; COM port ID & list
	;~~~~~~~~~~~~
port_count		equ 4

sCOM				db "\\.\"
sCOM1				db "COM"
COM_id				db "1",0
sCOM2				db "COM2",0
sCOM3				db "COM3",0
sCOM4				db "COM4",0

	; speed list
	;~~~~~~~~~~~
speed_count			equ 15
speed_default		equ 11	; from 0..n	

sBPS1				db "110   ",0
sBPS2				db "300   ",0
sBPS3				db "600   ",0
sBPS4				db "1200  ",0
sBPS5				db "2400  ",0
sBPS6				db "4800  ",0
sBPS7				db "9600  ",0
sBPS8				db "14400 ",0
sBPS9				db "19200 ",0
sBPS10				db "38400 ",0
sBPS11				db "56000 ",0
sBPS12				db "57600 ",0
sBPS13				db "115200",0
sBPS14				db "128000",0
sBPS15				db "256000",0

	; parity list
	;~~~~~~~~~~~~
parity_count		equ 5

sParity1			db "No   ",0
sParity2			db "Even ",0
sParity3			db "Mark ",0
sParity4			db "Odd  ",0
sParity5			db "Space",0

	; stop-bits list
	;~~~~~~~~~~~~~~~
stopbits_count		equ 3

sStopBits1			db "1  ",0
sStopBits2			db "1.5",0
sStopBits3			db "2  ",0

	; format #1
	;~~~~~~~~~~
sFormat1_0			db "$HEVHW,"
sFormat1_1			db ",T,0.0,M,"
sFormat1_2			db ",N,"
sFormat1_3			db ",K*"

	; format #2
	;~~~~~~~~~~
sFormat2_0			db "$VWVPW,"
sFormat2_1			db ",N,"
sFormat2_2			db ",M*"

	; params 4 convert
	;~~~~~~~~~~~~~~~~~
KnotsToMetres		dq 0.514
MetresToKilometres	dq 3.6
MinutesToMetres		dd 1852
fmtLa				db "%02lu",0
fmtLo				db "%03lu",0

	; status text
	;~~~~~~~~~~~~
sStart				db "Старт",0
sStop				db "Стоп",0
sReady				db "Готов к работе",0
sDoing				db "Выполнение сценария...",0
sDone				db "Сценарий выполнен",0

hexTable			db "0123456789ABCDEF"

	; open dialog text
	;~~~~~~~~~~~~~~~~~
ofnTitle			db "Открыть файл сценария",0				
ofnFilter			db "Data Files (*.dat)",0,"*.dat",0
					db "All Files (*.*)",0,"*.*",0,0
	
	; about text
	;~~~~~~~~~~~
sAbout0				db "Script Executor v0.5 (demo version)",0
sAbout1				db "22.08.2005 by fnt0m32 'at' gmail.com",10,"Have fun!",0

	; help text
	;~~~~~~~~~~
sHelpTitle			db "Справка",0
sHelp				db "Программа читает текстовые файлы-скрипты. Файл скрипта состоит из строк, каждая из которых",10
					db "оформляется в таком формате:",10
					db "^course<SP>speed<SP>time<CR><LF>",10
					db "Где:",10
					db "^ - начало строки, без лишних пробелов и знаков табуляции.",10
					db "course - курс, в градусах (положительное целое/дробное число), задается следующими способами:",10
					db "    x.x -> статический курс на протяжении времени time.",10
					db "    x.x-x.x -> диапазон изменения курса за время time.",10
					db "speed - скорость в узлах (положительное целое/дробное число), задается такими способами:",10
					db "    x.x -> статическая скорость на протяжении времени time.",10
					db "    x.x-x.x -> диапазон изменения скорости за время time.",10
					db "time - время в секундах (положительное целое число), на протяжении которого действуют текущие",10
					db "    значения курса/скорости, если заданы диапазоны для курса/скорости,",10
					db "    то их значения изменяются с каждой секундой времени time.",10
					db "<SP> - символ пробела (0x20)",10
					db "<CR> - символ перевода каретки (0x0D)",10
					db "<LF> - символ конца строки (0x0A)",10,10
					db "  Поскольку все строки записываются в одинаковом формате, то не забывайте про <CR><LF>",10
					db "в конце последней строки файла!",10
					db "  Т.е. программа читает каждую строку файла, затем каждую секунду времени time выводит на экран",10
					db "информацию о текущем курсе/скорости и общем пройденном времени/дистанции.",10
					db "  Если включен вывод в порт, то также каждую секунду подаются в порт два предложения байтов:",10
					db "$HEVHW,c.c,T,0.0,M,n.n,N,k.k,K*hh<CR><LF>",10
					db "$VWVPW,n.n,N,m.m,M*hh<CR><LF>",10
					db "Где:",10
					db "c.c - курс в градусах",10
					db "n.n - скорость в узлах",10
					db "k.k - скорость в км/ч",10
					db "m.m - скорость в м/с",10
					db "hh - символьное представление шестнадцатеричного значения контрольной суммы, которая",10
					db "    высчитывается для каждого предложения отдельно. Сумма считается по формуле S = S xor B,",10
					db "    где S и B - текущая сумма и байт предложения. Вначале S=0, а байт B берется из диапазона,",10
					db "    начиная с символа после $ и заканчивая символом перед *."
					db 0

sHelp2				db "  Также программа получает от навигационного устройства данные, которые основываются на переданных",10
					db "ему курсе/скорости. Из всего блока данных выделяется такой набор байтов:",10
					db "$GPRMC,hhmmss.sss,A,LLll.ll,N,YYYyy.yy,E",10
					db "Где:",10
					db "hh - часы",10
					db "mm - минуты",10
					db "ss.sss - секунды и доли секунды",10
					db "A - признак достоверности решения: достоверно (A), недостоверно (V)",10
					db "LLll.ll - широта, LL - градусы, ll.ll - минуты и доли минуты",10
					db "N - северная (N) или южная (S) широта",10
					db "YYYyy.yy - долготa, YYY - градусы, yy.yy - минуты и доли минут",10
					db "E - восточная (E) или западная (W) долгота",10,10
					db "  Т.е. программа в начале выполнения сценария считывает от устройства координаты и принимает их",10
					db "за начальные. Затем каждые следующие полученные от устройства координаты сравнивает со своими,",10
					db "которые вычисляет основываясь на последних принятых от устройства координатах и последних",10
					db "переданных ему курсе/скорости. Результаты, ввиде отклонения в метрах, отображает на экране",10
					db "и записывает в файл отчета, каждая строка которого имеет вид:",10
					db "hhmmss.sss,La1,Lo1,La2,Lo2,dLa,dLo<CR><LF>",10
					db "Где:",10
					db "hhmmss.sss - время полученное от устройства",10
					db "La1 и Lo1 - координаты (широта/долгота) от прибора",10
					db "La2 и Lo2 - координаты (широта/долгота) от программы",10
					db "      LaX и LoX записываются в том же формате, что и в $GPRMC (см. выше)",10
					db "dLa - отклонение по широте, в метрах",10
					db "dLo - отклонение по долготе, в метрах",10,10
					db "Примечание: минус означает отклонение на юг или запад.",10,10
					db "  Демо версия: эта демонстрационная версия программы, кроме выдачи в порт каждую секунду курса",10
					db "и скорости в двух форматах, также выдает одну и туже последовательность байтов:",10
					db "$GPRMC,1230ss.026,A,4021.23,N,03541.33,E,stuff<CR><LF>",10
					db "Меняется только ss - текущая секунда сценария, соответственно максимум - 59, но можно и 99 :)",10
					db "Это дает возможность хоть как-то проверить саму программу (не имея устройства). Перекрестно соеденив",10
					db "два COM-порта программа будет в первый выдавать $HEVHW / $VWVPW / $GPRMC, а на втором получать",10
					db "эти данные и выделять из них $GPRMC, в демонстрационных целях выдавая значения отклонений."
					db 0

	; error messages
	;~~~~~~~~~~~~~~~
errTitle			db "Ошибка",0
errOpenFile			db "Не могу открыть файл.",0
errCreateFMO		db "Не могу создать file-mapping object.",0
errMapView			db "Не могу прочитать файл.",0
errOpenPort			db "Не могу открыть порт.",0

	; test data
	;~~~~~~~~~~
tstTime				db 0
size_RMC			equ 31
cGot_tst			dd 0
tstRMC				db 10h,0ffh
tstSec				db 00h,	011h,011h,	22h,22h,	33h,33h,	23h,25h
					db 11h,11h,  11h,11h,  11h,11h,  11h,11h,  33h,33h,  33h,33h,  33h,33h,  33h,33h
					db 0eah,0eah,    10h,03h
					db ".026,A,4021.23,N,03541.33,E,stuff",13,10

;-------------------------------------------------------------
; alloc memory
;-------------------------------------------------------------

.data?

	; handles
	;~~~~~~~~
hInstance			dd ?
hdlg				dd ?
hIcon				dd ?
hFile				dd ?	; input file/script
hOut				dd ?	; output file/report
hMapFile			dd ?
hCOM_out			dd ?	; write to that port
hCOM_in				dd ?	; read from that port

	; buffers
	;~~~~~~~~
fbuf_in				db FileNameSize dup(?)	; input file name
fbuf_out			db FileNameSize dup(?)	; output file name
buf					db 25 dup(?)			; temporary buffer for output to port
frmbuf				db 512 dup (?)			; format string (output to port)
inbuf				db InComBuf dup (?)		; input from port
outbuf				db 256 dup (?)			; output to file
tempbuf				db 25 dup (?)			; temporary buffer for received data manipulation

	; output data
	;~~~~~~~~~~~~
k1					dq ?			; course_1
k2					dq ?			; course_2
s1					dq ?			; speed_1
s2					dq ?			; speed_2
mps					dq ?			; speed (mps)
t0					dd ?			; time
AllTime				dd ?			; total time in sec
Distance			dq ?			; total distance in metres
tt0					dq ?			; temp
tt1					dq ?			; temp
szK					db 10 dup (?)	; course as string
szS					db 10 dup (?)	; speed as string
szMPS				db 10 dup (?)	; speed(mps) as string

	; input data
	;~~~~~~~~~~~
Deg					dd ?
La_0				dq ?			; base latitude
Lo_0				dq ?			; base longitude
La					dq ?			; latitude from device
Lo					dq ?			; longitude from device
my_La				dq ?			; = La_0 + d_La
my_Lo				dq ?			; = Lo_0 + d_Lo
d_La				dq ?			; my delta latitude
d_Lo				dq ?			; my delta longitude
diff_La				dq ?			; = my_La - La
diff_Lo				dq ?			; = my_Lo - Lo
Alpha				dq ?			; temporary angle
sz_diff_La			db 16 dup (?)	; diff_La (mps) as string
sz_diff_Lo			db 16 dup (?)	; diff_Lo (mps) as string
ival				dd ?			; temp int value

	; interface flags
	;~~~~~~~~~~~~~~~~
Start				dd ?			; =1 (work), =0 (idle)
IfOut				db ?			; =1 (in/out is turned on), =0 (in/out is turned off)

	; working with ports
	;~~~~~~~~~~~~~~~~~~~
cGot_out			dd ?			; count of bytes output
cGot_in				dd ?			; count of bytes input
ovr_out				OVERLAPPED <?>	; struct 4 asynchronous output
ovr_in				OVERLAPPED <?>	; struct 4 asynchronous input
FirstTime			db ?			; flag for first RMC

	; thread's data
	;~~~~~~~~~~~~~~
ThreadID			dd ?
ThreadOn			dd ?

	; other
	;~~~~~~
ofn					OPENFILENAME <?>	; using by open file dialog
pMemory				dd ?				; main pointer to begin of script data
pData				dd ?				; temporary pointer to script data
FileSize			dd ?				; size of file in bytes left
cwr					dw ?				; Control Word Register (fpu)